- hosts: all

  vars:
    girder_update: no
    girder_force: no
    girder_virtualenv: "{{ ansible_user_dir }}/.virtualenvs/girder"
    girder_web_extra_args: "--all-plugins"
    girder_always_build_assets: yes

  pre_tasks:
    - name: Update package cache
      apt:
        update_cache: yes
      become: yes
      become_user: root
      when: ansible_os_family == "Debian"

    - name: Install EPEL
      yum:
        name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm"
        state: present
      become: yes
      become_user: root
      when: ansible_os_family == "RedHat"

  roles:
    - role: girder.girder

  post_tasks:
    - name: Configure Girder Database
      ini_file:
        dest: "{{ girder_path }}/girder/conf/girder.local.cfg"
        backup: yes
        section: "database"
        option: "uri"
        value: "\"mongodb://{{ mongodb_ip }}/girder\""

    - name: Install Girder-Client
      pip:
        name: "girder-client"
        state: present
      become: yes
      become_user: root

    - name: Wait for Girder to be available
      wait_for:
        port: 8080

    - name: Create Girder User
      girder:
        port: 8080
        user:
          firstName: "girder"
          lastName: "girder"
          login: "girder"
          password: "girder"
          email: "girder@girder.girder"
          admin: yes
        state: present

    - name: Copy Fibonacci Plugin
      copy:
        src: "../../../etc/fibonacci_plugin"
        dest: "{{ ansible_user_dir }}"
        force: no

    - name: Install Fibonacci Plugin
      command: "{{ girder_install_executable }} plugin -s {{ ansible_user_dir }}/fibonacci_plugin"

    - name: Enable Fibonacci Plugin
      girder:
        port: 8080
        username: "girder"
        password: "girder"
        plugins:
          - fibonacci_plugin
          - worker
        state: present

    - name: Restart Girder
      service:
        name: girder
        state: restarted
      become: yes
      become_user: root

    - name: Wait for Girder to be available
      wait_for:
        port: 8080

    - name: Set Worker Plugin Settings
      girder:
        port: 8080
        username: "girder"
        password: "girder"
        setting:
          key: "{{ item.key }}"
          value: "{{ item.value }}"
      with_items:
        - { key: "worker.api_url", value: "http://{{ girder_ip }}:8080/api/v1" }
        - { key: "worker.broker",  value: "amqp://girder_worker:girder_worker@{{ broker_ip }}" }
        - { key: "worker.backend", value: "amqp://girder_worker:girder_worker@{{ broker_ip }}" }
