# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- hosts: cinder_api[0]
  user: root
  roles:
    - maas_remote
  vars:
    entity_name: "{{ lb_name }}"
    target_alias: "{{ maas_target_alias }}"
    check_type: remote.http
    check_name: lb_api_check_cinder
    check_period: "{{ maas_check_period }}"
    check_timeout: "{{ maas_check_timeout }}"
    monitoring_zones: "{{ maas_monitoring_zones }}"
    notification_plan: "{{ maas_notification_plan }}"
    scheme: "{{ maas_cinder_scheme | default(maas_scheme)}}"
    ip_address: "{{ external_vip_address }}"
    port: "{{ cinder_service_port }}"
    path: ""
    url: "{{ scheme }}://{{ ip_address }}:{{ port }}{{ path }}"
    alarm_name: lb_api_alarm_cinder
    criteria: ":set consecutiveCount={{ maas_alarm_remote_consecutive_count }} if (metric['code'] != '200') { return new AlarmStatus(CRITICAL, 'API unavailable.'); }"

- hosts: glance_api[0]
  user: root
  roles:
    - maas_remote
  vars:
    entity_name: "{{ lb_name }}"
    target_alias: "{{ maas_target_alias }}"
    check_type: remote.http
    check_name: lb_api_check_glance
    check_period: "{{ maas_check_period }}"
    check_timeout: "{{ maas_check_timeout }}"
    monitoring_zones: "{{ maas_monitoring_zones }}"
    notification_plan: "{{ maas_notification_plan }}"
    scheme: "{{ maas_glance_scheme | default(maas_scheme)}}"
    ip_address: "{{ external_vip_address }}"
    port: 9292
    path: ""
    url: "{{ scheme }}://{{ ip_address }}:{{ port }}{{ path }}"
    alarm_name: lb_api_alarm_glance
    criteria: ":set consecutiveCount={{ maas_alarm_remote_consecutive_count }} if (metric['code'] != '300') { return new AlarmStatus(CRITICAL, 'API unavailable.'); }"

- hosts: keystone[0]
  user: root
  roles:
    - maas_remote
  vars:
    entity_name: "{{ lb_name }}"
    target_alias: "{{ maas_target_alias }}"
    check_type: remote.http
    check_name: lb_api_check_keystone
    check_period: "{{ maas_check_period }}"
    check_timeout: "{{ maas_check_timeout }}"
    monitoring_zones: "{{ maas_monitoring_zones }}"
    notification_plan: "{{ maas_notification_plan }}"
    scheme: "{{ maas_keystone_scheme | default(maas_scheme)}}"
    ip_address: "{{ external_vip_address }}"
    port: "{{ auth_public_port }}"
    path: ""
    url: "{{ scheme }}://{{ ip_address }}:{{ port }}{{ path }}"
    alarm_name: lb_api_alarm_keystone
    criteria: ":set consecutiveCount={{ maas_alarm_remote_consecutive_count }} if (metric['code'] != '300') { return new AlarmStatus(CRITICAL, 'API unavailable.'); }"

- hosts: neutron_server[0]
  user: root
  roles:
    - maas_remote
  vars:
    entity_name: "{{ lb_name }}"
    target_alias: "{{ maas_target_alias }}"
    check_type: remote.http
    check_name: lb_api_check_neutron
    check_period: "{{ maas_check_period }}"
    check_timeout: "{{ maas_check_timeout }}"
    monitoring_zones: "{{ maas_monitoring_zones }}"
    notification_plan: "{{ maas_notification_plan }}"
    scheme: "{{ maas_neutron_scheme | default(maas_scheme)}}"
    ip_address: "{{ external_vip_address }}"
    port: 9696
    path: "/"
    url: "{{ scheme }}://{{ ip_address }}:{{ port }}{{ path }}"
    alarm_name: lb_api_alarm_neutron
    criteria: ":set consecutiveCount={{ maas_alarm_remote_consecutive_count }} if (metric['code'] != '200') { return new AlarmStatus(CRITICAL, 'API unavailable.'); }"

- hosts: nova_api_os_compute[0]
  user: root
  roles:
    - maas_remote
  vars:
    entity_name: "{{ lb_name }}"
    target_alias: "{{ maas_target_alias }}"
    check_type: remote.http
    check_name: lb_api_check_nova
    check_period: "{{ maas_check_period }}"
    check_timeout: "{{ maas_check_timeout }}"
    monitoring_zones: "{{ maas_monitoring_zones }}"
    notification_plan: "{{ maas_notification_plan }}"
    scheme: "{{ maas_nova_scheme | default(maas_scheme)}}"
    ip_address: "{{ external_vip_address }}"
    port: 8774
    path: ""
    url: "{{ scheme }}://{{ ip_address }}:{{ port }}{{ path }}"
    alarm_name: lb_api_alarm_nova
    criteria: ":set consecutiveCount={{ maas_alarm_remote_consecutive_count }} if (metric['code'] != '200') { return new AlarmStatus(CRITICAL, 'API unavailable.'); }"

- hosts: horizon[0]
  user: root
  roles:
    - maas_remote
  vars:
    entity_name: "{{ lb_name }}"
    target_alias: "{{ maas_target_alias }}"
    check_type: remote.http
    check_name: lb_api_check_horizon
    check_period: "{{ maas_check_period }}"
    check_timeout: "{{ maas_check_timeout }}"
    monitoring_zones: "{{ maas_monitoring_zones }}"
    notification_plan: "{{ maas_notification_plan }}"
    scheme: "{{ maas_horizon_scheme | default(maas_scheme)}}"
    ip_address: "{{ external_vip_address }}"
    port: 443
    path: ""
    url: "{{ scheme }}://{{ ip_address }}:{{ port }}{{ path }}"
    alarm_name: lb_api_alarm_horizon
    criteria: ":set consecutiveCount={{ maas_alarm_remote_consecutive_count }} if (metric['code'] != '200') { return new AlarmStatus(CRITICAL, 'API unavailable.'); }"

- hosts: heat_api[0]
  user: root
  roles:
    - maas_remote
  vars:
    entity_name: "{{ lb_name }}"
    target_alias: "{{ maas_target_alias }}"
    check_type: remote.http
    check_name: lb_api_check_heat_api
    check_period: "{{ maas_check_period }}"
    check_timeout: "{{ maas_check_timeout }}"
    monitoring_zones: "{{ maas_monitoring_zones }}"
    notification_plan: "{{ maas_notification_plan }}"
    scheme: "{{ maas_heat_api_scheme | default(maas_scheme)}}"
    ip_address: "{{ external_vip_address }}"
    port: 8004
    path: ""
    url: "{{ scheme }}://{{ ip_address }}:{{ port }}{{ path }}"
    alarm_name: lb_api_alarm_heat_api
    criteria: ":set consecutiveCount={{ maas_alarm_remote_consecutive_count }} if (metric['code'] != '300') { return new AlarmStatus(CRITICAL, 'API unavailable.'); }"

- hosts: heat_api_cfn[0]
  user: root
  roles:
    - maas_remote
  vars:
    entity_name: "{{ lb_name }}"
    target_alias: "{{ maas_target_alias }}"
    check_type: remote.http
    check_period: "{{ maas_check_period }}"
    check_timeout: "{{ maas_check_timeout }}"
    check_name: lb_api_check_heat_cfn
    monitoring_zones: "{{ maas_monitoring_zones }}"
    notification_plan: "{{ maas_notification_plan }}"
    scheme: "{{ maas_heat_cfn_scheme | default(maas_scheme)}}"
    ip_address: "{{ external_vip_address }}"
    port: 8000
    path: ""
    url: "{{ scheme }}://{{ ip_address }}:{{ port }}{{ path }}"
    alarm_name: lb_api_alarm_heat_cfn
    criteria: ":set consecutiveCount={{ maas_alarm_remote_consecutive_count }} if (metric['code'] != '300') { return new AlarmStatus(CRITICAL, 'API unavailable.'); }"

- hosts: heat_api_cloudwatch[0]
  user: root
  roles:
    - maas_remote
  vars:
    entity_name: "{{ lb_name }}"
    target_alias: "{{ maas_target_alias }}"
    check_type: remote.http
    check_name: lb_api_check_heat_cloudwatch
    check_period: "{{ maas_check_period }}"
    check_timeout: "{{ maas_check_timeout }}"
    monitoring_zones: "{{ maas_monitoring_zones }}"
    notification_plan: "{{ maas_notification_plan }}"
    scheme: "{{ maas_heat_cloudwatch_scheme | default(maas_scheme)}}"
    ip_address: "{{ external_vip_address }}"
    port: 8003
    path: ""
    url: "{{ scheme }}://{{ ip_address }}:{{ port }}{{ path }}"
    alarm_name: lb_api_alarm_heat_cloudwatch
    criteria: ":set consecutiveCount={{ maas_alarm_remote_consecutive_count }} if (metric['code'] != '300') { return new AlarmStatus(CRITICAL, 'API unavailable.'); }"
