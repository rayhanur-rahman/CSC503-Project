---
- fail:
    msg: "{{ item }} is required."
  when: "{{ item }} is not defined"
  with_items:
  - vosar_output_directory
  - vosar_rpm_directory

# Check for rpm dir
- stat:
    path: "{{ vosar_rpm_directory }}"
  register: rpm_dir_stat_output

- fail:
    msg: "{{ vosar_rpm_directory }} doesn't exist, or isn't a directory."
  when: not rpm_dir_stat_output.stat.exists

- name: Get the version of the RPMS
  shell: "rpm -qp --queryformat '%{VERSION}\n' openshift-ansible*rpm | sort | uniq"
  args:
    chdir: "{{ vosar_rpm_directory }}"
  register: rpm_short_version

- name: Extract the contents of the installer RPMs
  shell: "rpm2cpio {{ item | quote }} | cpio -idmv"
  args:
    chdir: "{{ vosar_output_directory }}"
  with_fileglob:
  - "{{ vosar_rpm_directory }}/openshift-ansible-*.rpm"

- name: check for dirs that need to be moved
  stat:
    path: "{{ item }}"
  with_items:
  - "{{ vosar_output_directory }}/usr/share/ansible_plugins/callback_plugins/"
  - "{{ vosar_output_directory }}/usr/share/ansible_plugins/filter_plugins/"
  - "{{ vosar_output_directory }}/usr/share/ansible_plugins/lookup_plugins/"
  - "{{ vosar_output_directory }}/usr/share/ansible/openshift-ansible/playbooks/"
  - "{{ vosar_output_directory }}/usr/share/ansible/openshift-ansible/roles/"
  - "{{ vosar_output_directory }}/usr/share/ansible/openshift-ansible/library/"
  - "{{ vosar_output_directory }}/usr/share/ansible/openshift-ansible/files/"
  register: rpm_dir_stat_output

- name: Fix up the extracted contents into a normal ansible layout
  command: "mv {{ item.item | quote }} {{ vosar_output_directory }}"
  when: item.stat.exists
  with_items: "{{ rpm_dir_stat_output.results }}"

- name: Make the vendored directory ONLY be the BYO installer
  file:
    state: absent
    path: "{{ vosar_output_directory }}/{{ item }}"
  with_items:
  - usr
  - playbooks/adhoc
  - playbooks/libvirt
  - playbooks/openstack
  - roles/ansible
  - roles/ansible_tower
  - roles/ansible_tower_cli
  - roles/chrony
  - roles/copr_cli
  - roles/docker_storage
  - roles/fluentd_master
  - roles/dns
  - roles/kube_nfs_volumes
  - roles/lib_dyn
  - roles/lib_timedatectl
  - roles/lib_zabbix
  - roles/os_ipv6_disable
  - roles/oso_host_monitoring
  - roles/oso_monitoring_tools
  - roles/os_update_latest
  - roles/os_zabbix
  - roles/tito
  - roles/yum_repos
  #- rpms

- name: Symlink the filter and lookup plugins (no longer shipped with rpm) for byo/config
  file:
    state: link
    src: "../../{{ item }}"
    dest: "{{ vosar_output_directory }}/playbooks/byo/{{ item }}"
  with_items:
  - filter_plugins
  - lookup_plugins
  when: rpm_short_version.stdout | version_compare('3.8', '<')

# Let's grab the byo dirs that might need symlinks
- name: Lookup byo openshift-* dirs
  find:
    paths: "{{ vosar_output_directory }}/playbooks/byo/"
    patterns: "openshift-*"
    file_type: directory
  register: openshift_byo_dirs
  when: rpm_short_version.stdout | version_compare('3.8', '<')

- name: Symlink the filter and lookup plugins (no longer shipped with rpm) byo/<subdirs>
  file:
    state: link
    src: "../../../{{ item[0] }}"
    dest: "{{ vosar_output_directory }}/playbooks/byo/{{ item[1].path | basename }}/{{ item[0] }}"
  with_nested:
  - [ 'filter_plugins', 'lookup_plugins' ]
  - "{{ openshift_byo_dirs.files }}"
  when: rpm_short_version.stdout | version_compare('3.8', '<')

- name: Symlink the filter and lookup plugins roles/openshift_master_facts
  file:
    state: link
    src: "../../../{{ item.dirname }}/{{ item.linkname }}"
    dest: "{{ vosar_output_directory }}/roles/openshift_master_facts/{{ item.dirname }}/{{ item.linkname }}"
    force: yes
  with_items:
  - dirname: filter_plugins
    linkname: oo_filters.py
  - dirname: lookup_plugins
    linkname: oo_option.py
  when: rpm_short_version.stdout | version_compare('3.8', '<')

# Each OpenShift release ships with 1-2 supported upgrade paths in a
# version specific directory like "v3_4". Search for anything that looks like
# one, and create the required symlinks within it.
- name: Lookup versioned upgrade directories
  find:
    paths: "{{ vosar_output_directory }}/playbooks/byo/openshift-cluster/upgrades/"
    patterns: "v3_*"
    file_type: directory
  register: upgrade_versions
  when: rpm_short_version.stdout | version_compare('3.8', '<')

- name: Symlink the filter and lookup plugins (no longer shipped with rpm) for byo/openshift-cluster/upgrades
  file:
    state: link
    src: "../../../../../{{ item[0] }}"
    dest: "{{ vosar_output_directory }}/playbooks/byo/openshift-cluster/upgrades/{{ item[1].path | basename }}/{{ item[0] }}"
  with_nested:
  - [ 'filter_plugins', 'lookup_plugins' ]
  - "{{ upgrade_versions.files }}"
  when: rpm_short_version.stdout | version_compare('3.8', '<')

#######################################################################
# This section creates a lib_vendored_deps role that includes all of
# the deps from openshift-ansible that can be included in playbook to
# source dependencies
# Create the lib_vendored_deps role which includes necessary deps for easy use
- name: Make the lib_vendored_deps role
  file:
    state: directory
    path: "{{ item }}"
    recurse: true
  with_items:
  - "{{ vosar_output_directory }}/roles/lib_vendored_deps/library"
  - "{{ vosar_output_directory }}/roles/lib_vendored_deps/filter_plugins"
  - "{{ vosar_output_directory }}/roles/lib_vendored_deps/lookup_plugins"
  - "{{ vosar_output_directory }}/roles/lib_vendored_deps/callback_plugins"
  - "{{ vosar_output_directory }}/roles/lib_vendored_deps/action_plugins"

- name: Ensure contiv role gets committed to git
  file:
    state: touch
    path: "{{ vosar_output_directory }}/roles/contiv/empty_file"

###############################
# This is the roles/lib_* dirs
###############################
- find:
    path: "{{ vosar_output_directory }}/roles"
    patterns: lib_*
    file_type: directory
  register: lib_dirs

################################
## This is the roles/lib_*/library dirs
################################
- find:
    path: "{{ item }}/library"
    patterns: "*.py"
    file_type: file
  with_items:
  - "{{ lib_dirs.files | map(attribute='path') | list }}"
  register: lib_files

- debug:
    msg: "{{ lib_files.results | map(attribute='files') | list | ops_flatten | map(attribute='path') | list }}"

- name: set the paths into a var
  set_fact:
    lib_roles_files_path: "{{ lib_files.results | map(attribute='files') | list | ops_flatten | map(attribute='path') | list }}"

- name: Symlink the files into the appropriate spots
  file:
    state: link
    src: "{{ item | replace(vosar_output_directory + '/roles', '../..') }}"
    path: "{{ vosar_output_directory + '/roles/lib_vendored_deps/library/' + (item | basename) }}"
  with_items: "{{ lib_roles_files_path }}"

################################
## This is the roles/lib_*/filter_plugins dirs
################################
- find:
    path: "{{ item }}/filter_plugins"
    patterns: "*.py"
    file_type: file
  with_items:
  - "{{ lib_dirs.files | map(attribute='path') | list }}"
  register: fp_files

- debug:
    msg: "{{ fp_files.results | map(attribute='files') | list | ops_flatten | map(attribute='path') | list }}"

- name: set the paths into a var
  set_fact:
    fp_roles_files_path: "{{ fp_files.results | map(attribute='files') | list | ops_flatten | map(attribute='path') | list }}"

- name: Symlink the files into the appropriate spots
  file:
    state: link
    src: "{{ item | replace(vosar_output_directory + '/roles', '../..') }}"
    path: "{{ vosar_output_directory + '/roles/lib_vendored_deps/filter_plugins/' + (item | basename) }}"
  with_items: "{{ fp_roles_files_path }}"

################################
## This is the roles/lib_*/lookup_plugins dirs
################################
- find:
    path: "{{ item }}/lookup_plugins"
    patterns: "*.py"
    file_type: file
  with_items:
  - "{{ lib_dirs.files | map(attribute='path') | list }}"
  register: lp_files

- debug:
    msg: "{{ lp_files.results | map(attribute='files') | list | ops_flatten | map(attribute='path') | list }}"

- name: set the paths into a var
  set_fact:
    lp_roles_files_path: "{{ lp_files.results | map(attribute='files') | list | ops_flatten | map(attribute='path') | list }}"

- name: Symlink the files into the appropriate spots
  file:
    state: link
    src: "{{ item | replace(vosar_output_directory + '/roles', '../..') }}"
    path: "{{ vosar_output_directory + '/roles/lib_vendored_deps/lookup_plugins/' + (item | basename) }}"
  with_items: "{{ lp_roles_files_path }}"

################################
## This is the roles/lib_*/action_plugins dirs
################################
- find:
    path: "{{ item }}/action_plugins"
    patterns: "*.py"
    file_type: file
  with_items:
  - "{{ lib_dirs.files | map(attribute='path') | list }}"
  register: ap_files

- debug:
    msg: "{{ ap_files.results | map(attribute='files') | list | ops_flatten | map(attribute='path') | list }}"

- name: set the paths into a var
  set_fact:
    ap_roles_files_path: "{{ lp_files.results | map(attribute='files') | list | ops_flatten | map(attribute='path') | list }}"

- name: Symlink the files into the appropriate spots
  file:
    state: link
    src: "{{ item | replace(vosar_output_directory + '/roles', '../..') }}"
    path: "{{ vosar_output_directory + '/roles/lib_vendored_deps/action_plugins/' + (item | basename) }}"
  with_items: "{{ ap_roles_files_path }}"

################################
## This is the roles/lib_*/callback_plugins dirs
################################
- find:
    path: "{{ item }}/callback_plugins"
    patterns: "*.py"
    file_type: file
  with_items:
  - "{{ lib_dirs.files | map(attribute='path') | list }}"
  register: cb_files

- debug:
    msg: "{{ cb_files.results | map(attribute='files') | list | ops_flatten | map(attribute='path') | list }}"

- name: set the paths into a var
  set_fact:
    cb_roles_files_path: "{{ cb_files.results | map(attribute='files') | list | ops_flatten | map(attribute='path') | list }}"

- name: Symlink the files into the appropriate spots
  file:
    state: link
    src: "{{ item | replace(vosar_output_directory + '/roles', '../..') }}"
    path: "{{ vosar_output_directory + '/roles/lib_vendored_deps/callback_plugins/' + (item | basename) }}"
  with_items: "{{ cb_roles_files_path }}"
###############################
# END roles/lib_* dirs
###############################

###############################
# library dir
###############################
- debug: var=rpm_short_version.stdout
- find:
    path: "{{ vosar_output_directory }}/library"
    patterns: "*.py"
    file_type: file
  register: lib_files
  when: rpm_short_version.stdout | version_compare('3.8', '<')

- name: Symlink the files into the appropriate spots
  file:
    state: link
    src: "{{ item | replace(vosar_output_directory, '../../..') }}"
    path: "{{ vosar_output_directory + '/roles/lib_vendored_deps/library/' + (item | basename) }}"
  with_items: "{{ lib_files.files | map(attribute='path') | list }}"
  when: rpm_short_version.stdout | version_compare('3.8', '<')
###############################
# End library dir
###############################

###############################
# fitler_plugin dir
###############################
- find:
    path: "{{ vosar_output_directory }}/filter_plugins"
    patterns: "*.py"
    file_type: file
  register: lib_files
  when: rpm_short_version.stdout | version_compare('3.8', '<')

- name: Symlink the files into the appropriate spots
  file:
    state: link
    src: "{{ item | replace(vosar_output_directory, '../../..') }}"
    path: "{{ vosar_output_directory + '/roles/lib_vendored_deps/filter_plugins/' + (item | basename) }}"
  with_items: "{{ lib_files.files | map(attribute='path') | list }}"
  when: rpm_short_version.stdout | version_compare('3.8', '<')

###############################
# lookup_plugin dir
###############################
- name: find lookup plugins
  find:
    path: "{{ vosar_output_directory }}/lookup_plugins"
    patterns: "*.py"
    file_type: file
  register: lib_files
  when: rpm_short_version.stdout | version_compare('3.8', '<')

- name: Symlink the files into the appropriate spots
  file:
    state: link
    src: "{{ item | replace(vosar_output_directory, '../../..') }}"
    path: "{{ vosar_output_directory + '/roles/lib_vendored_deps/lookup_plugins/' + (item | basename) }}"
  with_items: "{{ lib_files.files | map(attribute='path') | list }}"
  when: rpm_short_version.stdout | version_compare('3.8', '<')
