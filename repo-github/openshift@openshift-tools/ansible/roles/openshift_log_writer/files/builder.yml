---
apiVersion: v1
kind: Template
metadata:
  name: oso-log-writer
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      template: oso-log-writer
    name: oso-log-writer
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "oso-${PLAT}-log-writer:latest"
    postCommit: {}
    resources: {}
    source:
      contextDir: "docker/oso-log-writer/${PLAT}"
      git:
        ref: podlogger
        uri: https://github.com/rhdedgar/openshift-tools
      secrets: []
      type: Git
    strategy:
      dockerStrategy:
        env:
        - name: OO_PAUSE_ON_BUILD
          value: "false"
        from:
          kind: ImageStreamTag
          name: "oso-${PLAT}-ops-base:latest"
      type: Docker
    triggers:
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: oso-log-writer
    name: "${PLAT}"
  spec:
    dockerImageRepository: "library/${PLAT}"
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: "registry.access.redhat.com/${PLAT}:latest"
      importPolicy: {}
      name: latest
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: oso-log-writer
    name: "oso-${PLAT}-ops-base"
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: "library/oso-${PLAT}-ops-base:latest"
      importPolicy: {}
      name: latest
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      template: oso-log-writer
    name: "oso-${PLAT}-log-writer"
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: "library/oso-${PLAT}-log-writer:latest"
      importPolicy: {}
      name: latest
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      template: oso-log-writer
    name: oso-log-writer
  spec:
    replicas: 1
    selector:
      deploymentconfig: oso-log-writer
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          deploymentconfig: oso-log-writer
      spec:
        containers:
        - env:
          - name: OO_PAUSE_ON_START
            value: "false"
          image: "oso-log-writer/oso-${PLAT}-log-writer:latest"
          imagePullPolicy: Always
          name: oso-log-writer
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /logs
            name: logpv
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        serviceAccount: apipodlogger
        serviceAccountName: apipodlogger 
        terminationGracePeriodSeconds: 30
        volumes:
        - name: logpv
          persistentVolumeClaim:
            claimName: logpv
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - oso-log-writer
        from:
          kind: ImageStreamTag
          name: "oso-${PLAT}-log-writer:latest"
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    name: oso-log-writer
    namespace: ${NAMESPACE}
    labels:
      k8s-app: oso-log-writer
  spec:
    ports:
    - name: loglistener
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      k8s-app: oso-log-writer
- apiVersion: "v1"
  kind: "PersistentVolumeClaim"
  metadata:
    name: "logpv"
  spec:
    accessModes:
      - "ReadWriteOnce"
    resources:
      requests:
        storage: "5Gi"
parameters:
- description: Platform name
  name: PLAT
  value: rhel7
- description: Project name
  name: NAMESPACE
  value: openshift-pod-logger
