---
#
# Install/run collectd for satellite (Generic)
#

# - name: Import EPEL GPG Key
#   rpm_key: key=https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
#     state=present

# - name: Check for EPEL repo
#   yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
#     state=present

- name: Check for EPEL
  shell: rpm -qa | grep -q epel-release
  ignore_errors: true
  register: epel_installed

# TODO: to use this method, check for presence of epel.repo first
# - name: Enable EPEL Repo
#   ini_file: dest=/etc/yum.repos.d/epel.repo
#     section=epel
#     option=enabled
#     value=1

- name: Check for enabled epel-release
  shell: yum repolist | grep -q epel
  ignore_errors: true
  register: epel_enabled

# (akrzos) I have found the use of the yum module for installing EPEL on rhel7 to encounter issues,
# thus using rpm to install via ansible. This does display a warning in Ansible output.
#
- name: Install EPEL rpm
  command: rpm -ivh --force {{ epel_release_rpm }}
  become: true
  when:
    - offline_install is undefined
    - epel_installed.rc != 0 or epel_enabled.rc != 0

# (akrzos) yum module works at this point due to the fact the EPEL repo now exists.  EPEL rpm is
# installed at this point in time.
#
- name: Install collectd rpms
  yum: name={{ item }} state=present
  become: true
  with_items: "{{collectd_packages[config_type]}}"
  register: install_collectd

#
# Enable mod_status
#
- name: Enable mod_status
  copy:
    src: status.conf
    dest: /etc/httpd/conf.d/status.conf
  notify: restart httpd

#
# Satellite6 specific configuration steps
#
- name: Get Candlepin PostgresDB Password
  command: grep "jpa.config.hibernate.connection.password" /etc/candlepin/candlepin.conf
  register: satellite_candlepin_password
  when: "'{{config_type}}' == 'satellite6'"

- name: Get Foreman PostgresDB Password
  shell: grep "password" /etc/foreman/database.yml | awk '{print $2}' | tr -d '"'
  register: satellite_foreman_password
  when: "'{{config_type}}' == 'satellite6'"


# - name: Allow group read to /etc/origin/master/admin.key
#   file: path=/etc/origin/master/admin.key mode=0640
#   when: "'{{config_type}}' == 'ose'"

- name: Configure collectd.conf
  template:
    src={{config_type}}.collectd.conf.j2
    dest=/etc/collectd.conf
    owner=root
    group=root
    mode=0644
  become: true

# Configure selinux bits
#
- name: Check for collectd permissive
  shell: semodule -l | grep -q permissive_collectd_t
  become: true
  register: collectd_permissive
  ignore_errors: true
  changed_when: false

# This command is not always found?
- name: Set permissive for collectd
  shell: semanage permissive -a collectd_t
  become: true
  when: collectd_permissive.rc != 0
  ignore_errors: true

#
# Additional policy bits may be needed for exec
#
- name: Collectd policy customization
  copy:
    src=custom-collectd.pp
    dest=/root/custom-collectd.pp
    owner=root
    group=root
    mode=644
  become: true

- name: Check for collectd custom
  shell: semodule -l | grep -q custom-collectd
  become: true
  register: collectd_custom
  ignore_errors: true
  changed_when: false

- name: Set custom policy for collectd
  shell: semodule -i /root/custom-collectd.pp
  become: true
  when: collectd_custom.rc != 0

# add collectd default group (not added with rpm -ivh)
#
- name: Add collectd group
  group: name=collectd state=present
  become: true

# Start collectd service
- name: Setup collectd service
  service: name=collectd state=restarted enabled=true
  become: true

# sometimes there's a stale epel package present, so rpm -e fails
# because somebody deleted the .repo files without uninstalling
# epel-release and rpm -e fails to remove multiple versions of the
# package. So we need to check this and remove all one by one
- name: Disable EPEL
  shell: |
    count=$(rpm -q epel-release | wc -l)
    if [[ $count -gt 1 ]]; then
      for ver in `rpm -q epel-release`; do
        rpm -e $ver
      done
    else
      rpm -e epel-release
    fi
  ignore_errors: true
  become: true
  when: offline_install is undefined
