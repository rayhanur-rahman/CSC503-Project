---
- hosts: satellite6
  remote_user: root
  gather_facts: no
  vars_files:
    - ../../conf/satperf.yaml
    - ../../conf/satperf.local.yaml
  vars:
    content_puppet_product: SatPerfPuppetProduct
    content_puppet_repo: SatPerfPuppetFakeModuleRepo
    content_puppet_module_author: satperf
    content_puppet_module_name: satperftest
    content_puppet_module_file: /tmp/puppet-satperftest.txt
    content_puppet_module_file_content: Some important sentence
    content_puppet_cv: SatPerfContentViewPuppetFakeModule
    content_puppet_module_dir: "/root/{{ content_puppet_module_name }}"
  tasks:
  - name: "If we are on Sat 6.3, puppet module dir name is different"
    set_fact:
      content_puppet_module_name: "/root/{{ content_puppet_module_author }}-{{ content_puppet_module_name }}"
    when: "sat_version == '6.3'"
  - name: "Make sure puppet module build dir is empty"
    file:
      path: "{{ content_puppet_module_name }}"
      state: absent
  - name: "Generate puppet module template"
    command:
      "puppet module generate {{ content_puppet_module_author }}-{{ content_puppet_module_name }} --skip-interview"
  - name: "Create puppet module content"
    template:
      src: files/init.pp
      dest: "{{ content_puppet_module_name }}/manifests/init.pp"
  - name: "Build our puppet module"
    command:
      puppet module build "{{ content_puppet_module_name }}"

  - name: "Create Puppet product"
    command:
      hammer --username "{{ sat_user }}" --password "{{ sat_pass }}" product create --label "{{ content_puppet_product }}" --name "{{ content_puppet_product }}" --organization-id "{{ sat_orgid }}"
    register: cmd
    failed_when: cmd.rc != 0 and 'Name has already been taken for a product in this organization.' not in cmd.stderr
  - name: "Create puppet repository"
    command:
      hammer --username "{{ sat_user }}" --password "{{ sat_pass }}" repository create --content-type puppet --label "{{ content_puppet_repo }}" --name "{{ content_puppet_repo }}" --organization-id "{{ sat_orgid }}" --product "{{ content_puppet_product }}"
    register: cmd
    failed_when: cmd.rc != 0 and 'Name has already been taken for this product.' not in cmd.stderr
  - name: "Upload our puppet module to the repository"
    command:
      hammer --username "{{ sat_user }}" --password "{{ sat_pass }}" repository upload-content --name "{{ content_puppet_repo }}" --path "{{ content_puppet_module_name }}/pkg/{{ content_puppet_module_author }}-{{ content_puppet_module_name }}-0.1.0.tar.gz" --product "{{ content_puppet_product }}" --organization-id "{{ sat_orgid }}"
    register: upload
    until: "{{ upload.rc }} == 0"
    retries: 2
    delay: 10

  - name: "Create content view"
    command:
      hammer -u "{{ sat_user }}" -p "{{ sat_pass }}" content-view create --name "{{ content_puppet_cv }}" --organization-id "{{ sat_orgid }}"
  - name: "Add Puppet module to the content view"
    command:
      hammer -u "{{ sat_user }}" -p "{{ sat_pass }}" content-view puppet-module add --organization-id 1 --content-view "{{ content_puppet_cv }}" --name "{{ content_puppet_module_name }}" --author "{{ content_puppet_module_author }}"

  - name: "Publish and promote content view without async"
    command:
      hammer -u "{{ sat_user }}" -p "{{ sat_pass }}" content-view publish --name "{{ content_puppet_cv }}" --organization-id "{{ sat_orgid }}"
...
