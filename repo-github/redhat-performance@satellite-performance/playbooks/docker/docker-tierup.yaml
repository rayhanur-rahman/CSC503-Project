---
- hosts: docker-hosts
  remote_user: root
  gather_facts: no
  vars_files:
    - ../../conf/satperf.yaml
    - ../../conf/satperf.local.yaml
  roles:
  ###  - common
  tasks:
    - setup:
        gather_subset: "!all,network"
    - name: "WORKAROUND for issue when docker0 MAC gets changed on container start (bug: TODO)"
      command:
        ip link set docker0 address "{{ hostvars[inventory_hostname]['ansible_'+nic_private]['macaddress'] }}"
    - name: "Count running containers"
      command:
        docker ps -q
      register: docker_ids
    - name: "Warn if there is already more containers than configured"
      assert:
        that: "docker_ids.stdout_lines|length <= containers|default(250)"
    - name: "Containes started"
      shell: |
        for i in $( seq "{{ containers|default(250) - docker_ids.stdout_lines|length }}" ); do
          docker run -h "{{ ansible_hostname }}container$i.{{ client_domain }}" -d --tmpfs /tmp --tmpfs /run -v /sys/fs/cgroup:/sys/fs/cgroup:ro --ulimit nofile=10000:10000 r7perfsat
        done
      when: "docker_ids.stdout_lines|length < containers|default(250)"
    #- name: "List container IDs"
    #  command:
    #    docker ps -q
    #  register: docker_ids
    #- debug: var=docker_ids
    - name: "Cleanup containers IP list"
      file:
        path=/root/container-ips
        state=absent
      ###delegate_to: 127.0.0.1
      ###run_once: true
    - name: "Get IPs of containers"
      shell: |
        for c in $(docker ps -q); do
          docker inspect $c | python -c "import json,sys;obj=json.load(sys.stdin);print obj[0][\"Id\"], obj[0][\"NetworkSettings\"][\"IPAddress\"], obj[0][\"Config\"][\"Hostname\"]"
        done >/root/container-ips
    # TODO: rewrite this into inventory - would shuffling work?
    - name: "Shuffle container IPs"
      shell:
        sort -R /root/container-ips >/root/container-ips.shuffled
      ###delegate_to: 127.0.0.1
      ###run_once: true
    - name: "Initialize file we use to count used containers"
      lineinfile:
        name: /root/container-used-count
        state: present
        line: "0"
        create: yes
    - name: "Hide older logs"
      shell: |
        mkdir -p /root/old_logs
        mv /root/*.log /root/old_logs/ || true
    - name: "Flush ebtables on Sat"
      command:
        ebtables -t nat --flush
      delegate_to: "{{ groups['satellite6']|first }}"
      run_once: true
      when: ignore_satellite is not defined or ignore_satellite != 'true'
...
