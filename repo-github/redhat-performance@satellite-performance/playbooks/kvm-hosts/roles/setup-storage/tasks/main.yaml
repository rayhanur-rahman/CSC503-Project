---
  # Cleanup possible existing VGs and PVs:
  #
  #   vgremove docker
  #   vgremove vg_docker
  #   pvremove /dev/sdb
  #   if fdisk -l /dev/sdb | grep '/dev/sdb1'; then
  #       pvremove /dev/sdb1
  #       echo -e "d\nw" | fdisk /dev/sdb
  #       partprobe
  #   fi
  #
  # Another cleanup procedure when /dev/sdb1 is used in VG:
  #
  #   umount /home/
  #   sed -i '/\/home/d' /etc/fstab
  #   lvremove --yes /dev/mapper/rhel_gprfc032-home
  #   pvmove /dev/sdb1
  #   vgreduce rhel_gprfc032 /dev/sdb1
  #   pvremove /dev/sdb1
  #   echo -e "d\nw" | fdisk /dev/sdb
  #   partprobe

  - name: "Create physical volumes and volume group"
    lvg:
      vg: guest_images_lvm
      pvs: "{{ vms_storage_pvs | default('/dev/sdb') }}"
  - name: "Define storage pool"
    virt_pool:
      name: guest_images_lvm
      command: define
      xml:  "{{ lookup('template', 'files/guest_images_lvm.xml.j2') }}"
  - name: "Make sure storage pool have autostart enabled"
    virt_pool:
      name: guest_images_lvm
      autostart: yes
  - name: "Make sure storage pool is active"
    virt_pool:
      name: guest_images_lvm
      state: active
...
