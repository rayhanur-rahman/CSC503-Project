---
- hosts: kvm-hosts
  remote_user: root
  gather_facts: no
  vars_files:
    - ../../conf/satperf.yaml
    - ../../conf/satperf.local.yaml
  roles:
    ###- ../satellite/roles/common
  tasks:
    # Repos
    - name: "Unregister RHN"
      file:
        path: /etc/sysconfig/rhn/systemid
        state: absent
      tags: clean_all
    - name: "Unregister RHSM"
      command:
        subscription-manager unregister
      ignore_errors: yes
      tags: clean_all
    - name: "Clean RHSM"
      command:
        subscription-manager clean
      tags: clean_all
    - name: "Remove katello-ca-consumer-* if any"
      yum:
        name: katello-ca-consumer-*
        state: absent
      tags: clean_all
    - name: "Ensure RHSM config is OK"
      lineinfile:
        dest: /etc/rhsm/rhsm.conf
        line: "{{ item }}"
      with_items:
        - "hostname = subscription.rhsm.redhat.com"
        - "baseurl = https://cdn.redhat.com"
        - "repo_ca_cert = /etc/rhsm/ca/redhat-uep.pem"
      tags: clean_all
    - name: "No yum repo now"
      command:
        yum-config-manager --disable *
      tags: clean_all

    # RHSM registration
    # TODO

    # KVM guests
    - name: "Ensure libvirtd service is running"
      service:
        name: libvirtd
        state: started
        enabled: yes
    - name: "We have requirements installed"
      yum:
        name: libvirt-python
        state: present
    - name: "List VMs"
      virt:
        command: list_vms
      register: vms_list

    - name: "Get our VMs names"
      set_fact:
        our_vms: "{{ vms[inventory_hostname] | map(attribute='name') | list }}"

    - name: "All VMs stopped"
      virt:
        name: "{{ item }}"
        state: destroyed
      with_items: "{{ our_vms }}"
      #In case the VMs are already deleted.
      ignore_errors: yes

    - name: "All VMs removed"
      virt:
        name: "{{ item }}"
        command: undefine
      with_items: "{{ our_vms }}"
      #In case the VMs are already deleted.
      ignore_errors: yes

    - name: "Remove unused Logical Volumes"
      lvol:
        lv: "{{ item }}"
        vg: "{{ vm_vg }}"
        state: absent
        force: yes
      with_items: "{{ our_vms }}"
...
