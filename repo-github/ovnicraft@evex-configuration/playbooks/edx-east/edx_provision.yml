- name: Create ec2 instance
  hosts: localhost
  connection: local
  gather_facts: False
  pre_tasks:
  roles:
    - role: launch_ec2
      keypair: "{{ keypair }}"
      instance_type: "{{ instance_type }}"
      security_group: "{{ security_group }}"
      ami_image: "{{ ami }}"
      region: "{{ region }}"
      instance_tags: "{{ instance_tags }}"
      root_ebs_size: "{{ root_ebs_size }}"
      dns_name: "{{ dns_name }}"
      dns_zone: "{{ dns_zone }}"
      terminate_instance: true
      instance_profile_name: sandbox

- name: Configure instance(s)
  hosts: launched
  sudo: True
  gather_facts: False
  pre_tasks:
    - name: Wait for cloud-init to finish
      wait_for: >
        path=/var/log/cloud-init.log
        timeout=15
        search_regex="final-message"
  vars_files:
    - roles/edxapp/defaults/main.yml
    - roles/ora/defaults/main.yml
    - roles/xqueue/defaults/main.yml
    - roles/xserver/defaults/main.yml
  roles:
    # rerun common to set the hostname, nginx to set basic auth
    - common
    - role: nginx
      nginx_sites:
      - cms
      - lms
      - ora
      - xqueue
      - xserver
    # gh_users hash must be passed
    # in as a -e variable
    - gh_users
  post_tasks:
    - name: get instance id for elb registration
      local_action:
        module: ec2_lookup
        region: us-east-1
        tags:
          Name: "{{ name_tag }}"
      register: ec2_info
      when: elb
      sudo: False
    - name: register instance into an elb if one was provided
      local_action:
        module: ec2_elb
        region: "{{ region }}"
        instance_id: "{{ ec2_info.instance_ids[0] }}"
        state: present
        ec2_elbs:
          - "{{ elb }}"
      when: elb
      sudo: False
