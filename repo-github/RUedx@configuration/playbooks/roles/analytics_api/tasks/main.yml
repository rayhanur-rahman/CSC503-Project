---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://github.com/edx/configuration/wiki
# code style: https://github.com/edx/configuration/wiki/Ansible-Coding-Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
# Tasks for role analytics_api
#
# Overview:
#
# Install the Analytics Data API server, a python
# django application that runs under gunicorn
#
# Dependencies:
#
# Example play:
# - name: Deploy Analytics API
#   hosts: all
#   sudo: True
#   gather_facts: True
#   vars:
#     ENABLE_DATADOG: False
#     ENABLE_SPLUNKFORWARDER: False
#     ENABLE_NEWRELIC: False
#   roles:
#     - aws
#     - analytics_api
#
# ansible-playbook -i 'api.example.com,' ./analyticsapi.yml  -e@/ansible/vars/deployment.yml -e@/ansible/vars/env-deployment.yml
#

- name: setup the analytics_api env file
  template: >
    src="edx/app/analytics_api/analytics_api_env.j2"
    dest="{{ analytics_api_home }}/analytics_api_env"
    owner={{ analytics_api_user }}
    group={{ analytics_api_user }}
    mode=0644

- name: "add gunicorn configuration file"
  template: >
    src=edx/app/analytics_api/analytics_api_gunicorn.py.j2
    dest={{ analytics_api_home }}/analytics_api_gunicorn.py
  sudo_user: "{{ analytics_api_user }}"

- name: install application requirements
  pip: >
    requirements="{{ analytics_api_requirements_base }}/{{ item }}"
    virtualenv="{{ analytics_api_home }}/venvs/{{ analytics_api_service_name }}"
    state=present
  sudo_user: "{{ analytics_api_user }}"
  with_items: analytics_api_requirements

- name: migrate
  shell: >
    chdir={{ analytics_api_code_dir }}
    DB_MIGRATION_USER={{ COMMON_MYSQL_MIGRATE_USER }}
    DB_MIGRATION_PASS={{ COMMON_MYSQL_MIGRATE_PASS }}
    {{ analytics_api_home }}/venvs/{{ analytics_api_service_name }}/bin/python ./manage.py migrate --noinput
  sudo_user: "{{ analytics_api_user }}"
  environment: "{{ analytics_api_environment }}"
  when: migrate_db is defined and migrate_db|lower == "yes"

- name: run collectstatic
  shell: >
    chdir={{ analytics_api_code_dir }}
    {{ analytics_api_home }}/venvs/{{ analytics_api_service_name }}/bin/python manage.py collectstatic  --noinput
  sudo_user: "{{ analytics_api_user }}"
  environment: "{{ analytics_api_environment }}"

- name: create api users
  shell: >
    chdir={{ analytics_api_code_dir }}
    {{ analytics_api_home }}/venvs/{{ analytics_api_service_name }}/bin/python manage.py set_api_key {{ item.key }} {{ item.value }}
  sudo_user: "{{ analytics_api_user }}"
  environment: "{{ analytics_api_environment }}"
  with_dict: ANALYTICS_API_USERS

- name: write out the supervisor wrapper
  template: >
    src=edx/app/analytics_api/analytics_api.sh.j2
    dest={{ analytics_api_home }}/{{ analytics_api_service_name }}.sh
    mode=0650 owner={{ supervisor_user }} group={{ common_web_user }}

- name: write supervisord config
  template: >
    src=edx/app/supervisor/conf.d.available/analytics_api.conf.j2
    dest="{{ supervisor_available_dir }}/{{ analytics_api_service_name }}.conf"
    owner={{ supervisor_user }} group={{ common_web_user }} mode=0644

- name: enable supervisor script
  file: >
    src={{ supervisor_available_dir }}/{{ analytics_api_service_name }}.conf
    dest={{ supervisor_cfg_dir }}/{{ analytics_api_service_name }}.conf
    state=link
    force=yes
  when: not disable_edx_services

- name: update supervisor configuration
  shell: "{{ supervisor_ctl }} -c {{ supervisor_cfg }} update"
  when: not disable_edx_services

- name: create symlinks from the venv bin dir
  file: >
    src="{{ analytics_api_home }}/venvs/{{ analytics_api_service_name }}/bin/{{ item }}"
    dest="{{ COMMON_BIN_DIR }}/{{ item.split('.')[0] }}.analytics_api"
    state=link
  with_items:
  - python
  - pip
  - django-admin.py

- name: create symlinks from the repo dir
  file: >
    src="{{ analytics_api_code_dir }}/{{ item }}"
    dest="{{ COMMON_BIN_DIR }}/{{ item.split('.')[0] }}.analytics_api"
    state=link
  with_items:
  - manage.py

- name: restart analytics_api
  supervisorctl: >
    state=restarted
    supervisorctl_path={{ supervisor_ctl }}
    config={{ supervisor_cfg }}
    name={{ analytics_api_service_name }}
  when: not disable_edx_services
  sudo_user: "{{ supervisor_service_user }}"
