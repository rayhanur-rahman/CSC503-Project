---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Enable management plugin
  rabbitmq_plugin:
    names: rabbitmq_management
    state: enabled
  with_items: rabbitmq_plugins
  register: rabbitmq_plugin
  tags:
    - rabbitmq-config

- name: Enable queue mirroring
  rabbitmq_policy:
    name: "HA"
    pattern: '^(?!amq\.).*'
    tags: "ha-mode=all"
  register: rabbitmq_queue_mirror
  tags:
    - rabbitmq-config
    - rabbitmq-cluster

- name: Create rabbitmq config
  register: rabbit_config_changed
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "rabbitmq.config.j2", dest: "/etc/rabbitmq/rabbitmq.config" }
    - { src: "rabbitmq-server.j2", dest: "/etc/default/rabbitmq-server" }
  tags:
    - rabbitmq-config

- include: rabbitmq_restart.yml
  when: rabbit_config_changed|changed or rabbitmq_plugin|changed or rabbitmq_queue_mirror|changed

- name: Ensure rabbitmq user
  rabbitmq_user:
    user: "{{ rabbitmq_userid }}"
    password: "{{ rabbitmq_password }}"
    vhost: "/"
    configure_priv: ".*"
    read_priv: ".*"
    write_priv: ".*"
    state: "present"
  tags:
    - rabbitmq-user

# This is being done because the rabbitctl command used by the module
# is not very effective at returning proper status codes for failure
# and the module does not error detection. until we can go upstream
# to fix this issue this task being being done in two parts to ensure
# that the "guest" user is eradicated.
- name: Ensure default rabbitmq guest user is removed
  rabbitmq_user:
    user: guest
    state: absent
  when: inventory_hostname == groups['rabbitmq_all'][0]
  tags:
    - rabbitmq-user

- name: Ensure default rabbitmq guest user is removed
  rabbitmq_user:
    user: guest
    state: absent
  when: inventory_hostname != groups['rabbitmq_all'][0]
  tags:
    - rabbitmq-user
