---
- hosts: '{{ hosts | default("all") }}'
  become: '{{ become | default("no") }}'
  become_user: '{{ become_user | default("root") }}'
  remote_user: '{{ remote_user | default("root") }}'
  tasks:
      - set_fact:
          real_ansible_host: "{{ ansible_host | default(inventory_hostname) }}"

      - name: 01 Get rpm-ostree status --json output
        command: rpm-ostree status --json
        register: ros

      - name: 02 Convert to JSON
        set_fact:
            ros_json: "{{ ros.stdout|from_json }}"

      - name: 03 Set ros variable if deployment 0 is booted
        set_fact:
            ros_booted: "{{ ros_json['deployments'][0] }}"
            ros_not_booted: "{{ ros_json['deployments'][1] if ros_json['deployments'][1] is defined else false }}"
        when: ros_json['deployments'][0] is defined and ros_json['deployments'][0]['booted']

      - name: 04 Set ros variable if deployment 1 is booted
        set_fact:
            ros_booted: "{{ ros_json['deployments'][1] }}"
            ros_not_booted: "{{ ros_json['deployments'][0] if ros_json['deployments'][0] is defined else false }}"
        when: ros_json['deployments'][1] is defined and ros_json['deployments'][1]['booted']

      - name: 05 Deploy specific commit
        command: "atomic host deploy {{ commit }}"
        when: ros_booted['checksum'] != commit

      - name: 06 restart system
        command: /usr/bin/systemd-run --on-active=5 /usr/bin/systemctl reboot
        async: 1
        poll: 0
        ignore_errors: true
        when: ros_booted['checksum'] != commit

      - name: 07 ssh started {{ real_ansible_host }}
        become: false
        wait_for: host={{ real_ansible_host }}
            port=22 state=started delay=70 search_regex=OpenSSH
        delegate_to: localhost
        when: ros_booted['checksum'] != commit

      - name: 08 Get rpm-ostree status --json output
        command: rpm-ostree status --json
        register: ros

      - name: 09 Convert to JSON
        set_fact:
            ros_json: "{{ ros.stdout|from_json }}"

      - name: 10 Set ros variable if deployment 0 is booted
        set_fact:
            ros_booted: "{{ ros_json['deployments'][0] }}"
            ros_not_booted: "{{ ros_json['deployments'][1] if ros_json['deployments'][1] is defined else false }}"
        when: ros_json['deployments'][0] is defined and ros_json['deployments'][0]['booted']

      - name: 11 Set ros variable if deployment 1 is booted
        set_fact:
            ros_booted: "{{ ros_json['deployments'][1] }}"
            ros_not_booted: "{{ ros_json['deployments'][0] if ros_json['deployments'][0] is defined else false }}"
        when: ros_json['deployments'][1] is defined and ros_json['deployments'][1]['booted']

      - name: 12 Verify specific commit
        fail:
            msg: "{{ ros_booted['checksum'] }} != {{ commit }}"
        when: ros_booted['checksum'] != commit
