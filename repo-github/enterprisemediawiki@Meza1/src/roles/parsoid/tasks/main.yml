---
# Setup paroid user

# Get Parsoid
#
# Due to #149 (VE doesn't allow image tags) we set force:yes so this repo's
# working directory is wiped out on each run. Then We can immediately patch
# the repo in the following step (optionally, if we want <img> tags)
- name: Get Parsoid repository
  # Ref #1149 for TMPDIR environment var
  environment:
    TMPDIR: "{{ m_tmp }}"
  git:
    repo: https://github.com/wikimedia/parsoid.git
    dest: "{{ m_parsoid_path }}"
    version: "{{ m_parsoid_version }}"
    force: yes
    umask: "0002"

# FIXME #149: Get MW-core and Parsoid patched so this isn't required anymore
- name: Patch Parsoid so it allows image tags
  shell: "sed -i -e 's/JSUtils.deepFreeze(WikitextConstants);/WikitextConstants.Sanitizer.TagWhiteList.add( \"IMG\" );\\nJSUtils.deepFreeze(WikitextConstants);/' /etc/parsoid/lib/config/WikitextConstants.js"
  when: allow_image_tags is defined and allow_image_tags

- name: Ensure parsoid group exists
  group:
    name: parsoid
    state: present

- name: Get current parsoid user home dir
  shell: "getent passwd parsoid | cut -d: -f6"
  register: parsoid_current_home

- debug: { var: parsoid_current_home }

- name: Set parsoid home directory
  set_fact:
    # parsoid_home: '"%s/parsoid".format( m_home )'
    parsoid_home: "{{ m_home }}/parsoid"

- debug: { var: parsoid_home }

- name: Set fact if parsoid home is correct
  set_fact:
    modify_parsoid_user: False
  # when: parsoid_current_home.stdout == "{{ m_home }}/parsoid"
  when: parsoid_current_home.stdout == parsoid_home

- name: Set fact if parsoid home is not correct
  set_fact:
    modify_parsoid_user: True
  # when: parsoid_current_home.stdout != "{{ m_home }}/parsoid"
  when: parsoid_current_home.stdout != parsoid_home

- debug: { var: modify_parsoid_user }

- name: Check if Parsoid service exists yet
  stat: path=/etc/init.d/parsoid
  register: parsoid_service_status

- name: Stop parsoid service if home is not correct
  service:
    name: parsoid
    state: stopped
  when:
    - docker_skip_tasks is not defined or not docker_skip_tasks
    - modify_parsoid_user
    - parsoid_service_status.stat.exists

- name: Ensure parsoid user exists
  user:
    name: parsoid
    group: parsoid
    move_home: yes
    home: "{{ m_home }}/parsoid"
    append: yes

- name: Ensure parsoid directory mode, not recursively
  file:
    path: "{{ m_parsoid_path }}"
    state: directory
    mode: 0755
    recurse: no

- name: Ensure parsoid directory ownership recursively
  file:
    path: "{{ m_parsoid_path }}"
    state: directory
    owner: parsoid
    group: parsoid
    recurse: yes

# I think I read somewhere that there was a bug in Ansible that made it so you
# had to separate "present" and "latest" states...couldn't just put "latest",
# but running both takes a lot of time.
# - name: Ensure Parsoid dependencies installed
#   npm:
#     path: "{{ m_parsoid_path }}"
#     state: present


# Previously the Ansible npm module was used here. It wasn't successfully
# getting all dependencies. Instead use npm directly.
#
# Also it doesn't appear to work with node 8's npm version
#
# - name: Ensure Parsoid dependencies are latest
#   npm:
#     path: "{{ m_parsoid_path }}"
#     state: latest
- name: Ensure Parsoid dependencies are latest
  become: yes
  become_user: parsoid
  shell: "cd {{ m_parsoid_path }} && npm install"
  tags:
    - latest
    - parsoid-deps
