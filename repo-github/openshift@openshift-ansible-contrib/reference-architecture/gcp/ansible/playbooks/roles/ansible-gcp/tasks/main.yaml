---
- name: check for service account
  command: gcloud --project {{ gcloud_project }} iam service-accounts list --filter {{ service_account }}
  register: service_account_output
  changed_when: false

- name: create new service account
  command: gcloud --project {{ gcloud_project }} iam service-accounts create {{ service_account }} --display-name '{{ service_account_name }}'
  register: service_account_created
  when: service_account not in service_account_output.stdout

- name: create service account key
  command: gcloud --project {{ gcloud_project }} iam service-accounts keys create {{ inventory_dir }}/gce/hosts/project.json --iam-account {{ service_account_id }} creates={{ inventory_dir }}/gce/hosts/project.json

- name: grant service account access to the gcp project
  command: gcloud --project {{ gcloud_project }} projects add-iam-policy-binding {{ gcloud_project }} --member serviceAccount:{{ service_account_id }} --role roles/editor
  when: service_account_created | changed

- name: create config file for dynamic inventory
  template:
    src: gce.ini.j2
    dest: '{{ inventory_dir }}/gce/hosts/gce.ini'

- name: remove old secrets.py files
  file:
    path: '{{ item }}'
    state: absent
  with_items:
    - '{{ inventory_dir }}/gce/hosts/secrets.py'
    - '{{ inventory_dir }}/gce/hosts/secrets.pyc'
    - '{{ inventory_dir }}/gce/hosts/secrets.pyo'
