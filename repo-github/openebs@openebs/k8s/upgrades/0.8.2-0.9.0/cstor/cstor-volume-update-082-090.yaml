# Sample runtasks for upgrading a cstor volume

# CASTemplate cstor-volume-update-082-090 is
# used to upgrade a cstor volume
apiVersion: openebs.io/v1alpha1
kind: CASTemplate
metadata:
  name: cstor-volume-update-082-090
spec:
  defaultConfig:
  # Base version is the version from which upgrade can happen.
  # This CAS template is does not support  upgrade of OpenEBS version
  # whose version is anything other that specified base version
  # Using this CAS templates, once can upgrade from OpenEBS version
  # 0.8.2 to 0.9.0 only.
  - name: baseVersion
    value: "0.8.2"
  - name: targetVersion
    value: "0.9.0"
  - name: successStatus
    value: "Success"
  - name: failStatus
    value: "Fail"
  run:
    tasks:
     # Runtask #1
     # This runatask will patch the upgraderesults cr with the pv detail which
     # is undergoing upgrade.
     - upgrade-cstor-volume-082-090-patch-upgrade-result

     # Runtask #2
     # This runtask will get the details of pv and verify it.
     - upgrade-cstor-volume-082-090-get-pv

     # Runtask #3
     # This runtask will get the details cStor target deployment and verify its current version
     # is in expected base version.
     # For every cStor volume there exists only one target deployment and this runtask
     # is developed on the same assumption
     - upgrade-cstor-volume-082-090-list-target-deployment

     - upgrade-cstor-volume-082-090-pre-check-target-pod-phase

     # Runtask #4
     # This runtask will get the details cStor target service and verify its current version
     # is in expected base version.
     # For every cStor volume there exists only one target service and this runtask
     # is developed on the same assumption
     - upgrade-cstor-volume-082-090-list-target-svc

     # Runtask #5
     # This runtask will get the details cstorvolume custom resource and verify its current version
     # is in expected base version.
     # For every cStor volume there exists only one cstorvolume custom resource and this runtask
     # is developed on the same assumption
     - upgrade-cstor-volume-082-090-list-cstorvolume

     # Runtask #6
     # This runtask will get the details cstorvolumereplica custom resource and verify its current version
     # is in expected base version.
     # This runtask also decides whether the volume is a cloned volume or not. This information
     # is saved in a task result variable to be used later by other runtasks.
     - upgrade-cstor-volume-082-090-list-cstorvolumereplicas

     # Runtask #7
     # This runtask will patch the cStor target deployment containers with the
     # target version.
     - upgrade-cstor-volume-082-090-patch-target-deployment-latest-image

     # Runtask #8
     # This runtask will verify that the cStor target deployment containers after
     # the patch has been rolled out successfully.
     - upgrade-cstor-volume-082-090-post-check-deployment-rollout-status-latest-image

     # Runtask #9
     # This runtask will verify that the cStor target deployment containers
     # that are running successfully has the appropriate target version.
     - upgrade-cstor-volume-082-090-post-check-patch-deployment-image

     # Runtask #10
     # This runtask will patch the cStor target service
     # with the version label of target version.
     # It also patches with PVC label.
     - upgrade-cstor-volume-082-090-patch-target-svc

     # Runtask #11
     # This runtask will check that the version labels has been
     # successfully updated for cstor target service.
     - upgrade-cstor-volume-082-090-post-check-target-svc

     # Runtask #12
     # This runtask will patch the cstorvolume resource
     # with the version label of target version.
     # This runtask will also add source volume label to
     # cstorvolume custom resource if the volume is a cloned
     # volume.
     - upgrade-cstor-volume-082-090-patch-cstor-volume

     # Runtask #13
     # This runtask will check that the version labels has been
     # successfully updated for cstorvolume.
     - upgrade-cstor-volume-082-090-post-check-cstor-volume-cr

     # Runtask #14
     # This runtask will patch the CVRs ( i.e. cstorvolumereplicas of the volume)
     # with the version label of target version.
     - upgrade-cstor-volume-082-090-patch-cstor-volume-replica

     # Runtask #15
     # This runtask will check that the version labels has been
     # successfully updated for the CVRs.
     - upgrade-cstor-volume-082-090-post-check-cstor-volume-replicas

     # Runtask #16
     # This runtask will list all the replicaset of the cstor
     # target deployment
     - upgrade-cstor-volume-082-090-list-target-replicaset

     # Runtask #17
     # This runtask will list the current running pod of the cStor
     # target deployment and help figure out the stale replicaset
     # entries of the cstor target deployment.
     - upgrade-cstor-volume-082-090-list-target-pod

     # Runtask #18
     # This runtask will delete the stale cStor target deployment.
     - upgrade-cstor-volume-082-090-delete-stale-replicaset-target

     # Runtask #19
     # This runtask will list the snapshots related to this volume
     - upgrade-cstor-volume-082-090-list-volumesnapshot

     # Runtask #20
     # This runtask will patched the snapshotdata with capacity
     - upgrade-cstor-volume-082-090-patch-volumesnapshotdatadata

     # Runtask #21
     # This runtask will post check the patched snapshotdata
     - upgrade-cstor-volume-082-090-post-check-volumesnapshotdata
  taskNamespace: default
---
# Runtask #1
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-patch-upgrade-result
  namespace: default
spec:
  meta: |
    id: patchResult
    apiVersion: openebs.io/v1alpha1
    kind: UpgradeResult
    action: patch
    objectName: {{ .UpgradeItem.upgradeResultName }}
    runNamespace: default
  post: |
    {{- $message := printf "upgradeResult {%s} has been patched with basic details such as name and namespace of the resource to be upgraded." .UpgradeItem.upgradeResultName -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-patch-upgrade-result" -}}
    {{- $taskStatus := upgradeResultWithTaskStatus "successful" -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- $taskRetries := upgradeResultWithTaskRetries 7 -}}
    {{- upgradeResultUpdateTasks $taskStartTime $taskRetries $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}
  task: |-
    type: merge
    pspec: |-
      status:
        resource:
          name: {{ .UpgradeItem.name }}
          namespace: {{ .UpgradeItem.namespace }}
          kind: {{ .UpgradeItem.kind }}
---
# Runtask #2
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-get-pv
  namespace: default
spec:
  meta: |
    id: getPVDetails
    apiVersion: v1
    kind: PersistentVolume
    action: get
    objectName: {{ .UpgradeItem.name }}
    runNamespace: {{ .UpgradeItem.namespace }}
  post: |
    {{- jsonpath .JsonResult "{.metadata.labels.openebs\\.io/cas-type}" | trim | saveAs "getPVDetails.volCASType" .TaskResult | noop -}}
    {{- .TaskResult.getPVDetails.volCASType | notFoundErr "volume CAS type not found" | saveIf "getPVDetails.notFoundErr" .TaskResult | noop -}}

    {{- jsonpath .JsonResult "{.spec.storageClassName}" | trim | saveAs "getPVDetails.storageClassName" .TaskResult | noop -}}
    {{- .TaskResult.getPVDetails.storageClassName | notFoundErr "storage class name not found for given volume" | saveIf "getPVDetails.notFoundErr" .TaskResult | noop -}}

    {{- jsonpath .JsonResult "{.spec.claimRef.namespace}" | trim | saveAs "getPVDetails.pvcNamespace" .TaskResult | noop -}}
    {{- .TaskResult.getPVDetails.pvcNamespace | notFoundErr "pvc namespace not found for given volume" | saveIf "getPVDetails.notFoundErr" .TaskResult | noop -}}

    {{- jsonpath .JsonResult "{.spec.claimRef.name}" | trim | saveAs "getPVDetails.pvcName" .TaskResult | noop -}}
    {{- .TaskResult.getPVDetails.pvcName | notFoundErr "pvc name not found for given volume" | saveIf "getPVDetails.notFoundErr" .TaskResult | noop -}}

    {{- jsonpath .JsonResult "{.spec.capacity.storage}" | trim | saveAs "getVolDetails.pvCapacity" .TaskResult | noop -}}
    {{- .TaskResult.getVolDetails.pvCapacity | notFoundErr "pv capacity not for given volume" | saveIf "getVolDetails.notFoundErr" .TaskResult | noop -}}

    {{- $message := printf "Successfully got details of PV {%s}." .UpgradeItem.name -}}
    {{- $status :=.Config.successStatus.value }}

    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-get-pv" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}
---
# Runtask #3
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-list-target-deployment
  namespace: default
spec:
  meta: |
    id: listTargetDeployment
    apiVersion: extensions/v1beta1
    kind: Deployment
    action: list
    runNamespace: {{ .UpgradeItem.namespace }}
    options: |-
      labelSelector: openebs.io/persistent-volume={{ .UpgradeItem.name }},openebs.io/target=cstor-target
  post: |
    {{- jsonpath .JsonResult "{.items[*].metadata.name}" | trim | saveAs "listTargetDeployment.targetDeploymentName" .TaskResult | noop -}}
    {{- .TaskResult.listTargetDeployment.targetDeploymentName | notFoundErr "volume target deployment not found" | saveIf "listTargetDeployment.notFoundErr" .TaskResult | noop -}}
    {{- jsonpath .JsonResult "{.items[*].metadata.labels.openebs\\.io/version}" | trim | saveAs "listTargetDeployment.labels" .TaskResult | noop -}}
    {{- jsonpath .JsonResult "{.items[*].metadata.labels.openebs\\.io/persistent-volume-claim}" | trim | saveAs "listTargetDeployment.pvcName" .TaskResult | noop -}}

    {{- jsonpath .JsonResult "{.items[*].spec.replicas}" | trim | saveAs "listTargetDeployment.replicaCount" .TaskResult | noop -}}
    {{- .TaskResult.listTargetDeployment.replicaCount | notFoundErr "replicas not found for cstor target deployment" | saveIf "listTargetDeployment.notFoundErr" .TaskResult | noop -}}

    {{- $message := printf "the target deployment for this PV {%s} is : {%s}" .UpgradeItem.name .TaskResult.listTargetDeployment.targetDeploymentName -}}
    {{- $status :="" }}
    {{- $verifyErrMessage := "cStor volume target version is not 0.8.2" -}}

    {{- $isBaseVersion := eq .TaskResult.listTargetDeployment.labels .Config.baseVersion.value }}
    {{- $isTargetVersion := eq .TaskResult.listTargetDeployment.labels .Config.targetVersion.value }}
    {{- if or $isBaseVersion $isTargetVersion -}}
    {{- $status =.Config.successStatus.value }}
    {{- else }}
    {{- $status =.Config.failStatus.value }}
    {{- end }}

    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-pool-082-090-get-cstorpool" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}

    {{- if eq $status .Config.failStatus.value }}
    {{- verifyErr $verifyErrMessage true | saveAs "listTargetDeployment.verifyErr" .TaskResult | noop -}}
    {{- end }}
---
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-pre-check-target-pod-phase
  namespace: default
spec:
  meta: |
    id: targetPodList
    apiVersion: v1
    kind: Pod
    action: list
    runNamespace: {{ .UpgradeItem.namespace }}
    options: |-
      labelSelector: openebs.io/persistent-volume={{ .UpgradeItem.name }},openebs.io/target=cstor-target
  post: |
    {{- $CustomJsonPath := printf "{.items[?(@.status.phase=='Running')].metadata.name}" -}}
    {{- $ErrMsg := printf "No running pods found for cstor volume: {%s}" .UpgradeItem.name -}}

    {{- jsonpath .JsonResult $CustomJsonPath | trim | saveAs "targetPodList.podName" .TaskResult | noop -}}
    {{- .TaskResult.targetPodList.podName | notFoundErr $ErrMsg | saveIf "targetPodList.notFoundErr" .TaskResult | noop -}}

    {{- .TaskResult.poolPodList.podName | default "" | splitList " " | len | saveAs "poolPodList.actualRunningPodCount" .TaskResult -}}

    {{- $expectedPodCount := .TaskResult.poolDeployment.replicaCount | int -}}
    {{- $msg := printf "expected %v no of running replica pod(s), found only %v replica pod(s)" $expectedPodCount .TaskResult.poolPodList.actualRunningPodCount -}}
    {{- .TaskResult.poolPodList.podName | default "" | splitList " " | isLen $expectedPodCount | not | verifyErr $msg | saveIf "poolPodList.verifyErr" .TaskResult | noop -}}

    {{- $message := printf "target pods are in running phase for volume: {%s}" .UpgradeItem.name -}}
    {{- $status := .Config.successStatus.value -}}

    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-pool-082-090-pre-check-pool-pod-phase" -}}
    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}
---
# Runtask #4
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-list-target-svc
  namespace: default
spec:
  meta: |
    id: listTargetService
    apiVersion: v1
    kind: Service
    action: list
    runNamespace: {{ .UpgradeItem.namespace }}
    options: |-
      labelSelector: openebs.io/persistent-volume={{ .UpgradeItem.name }},openebs.io/target-service=cstor-target-svc
  post: |
    {{- jsonpath .JsonResult "{.items[*].metadata.name}" | trim | saveAs "listTargetService.items" .TaskResult | noop -}}
    {{- .TaskResult.listTargetService.items | notFoundErr "volume target service not found" | saveIf "listTargetService.notFoundErr" .TaskResult | noop -}}
    {{- jsonpath .JsonResult "{.items[0].metadata.labels.openebs\\.io/version}" | trim | saveAs "listTargetService.version" .TaskResult | noop -}}

    {{- $message := printf "the target service for this volume {%s} is : {%s}" .UpgradeItem.name .TaskResult.listTargetService.items -}}
    {{- $status :="" }}
    {{- $verifyErrMessage := "cStor volume target service version is not 0.8.2" -}}

    {{- $isBaseVersion := eq .TaskResult.listTargetService.version .Config.baseVersion.value -}}
    {{- $isTargetVersion := eq .TaskResult.listTargetService.version .Config.targetVersion.value -}}
    {{- if or $isBaseVersion $isTargetVersion -}}
    {{- $status =.Config.successStatus.value }}
    {{- else }}
    {{- $status =.Config.failStatus.value }}
    {{- end }}

    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-list-target-svc" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}

    {{- if eq $status .Config.failStatus.value }}
    {{- verifyErr $verifyErrMessage true | saveAs "listTargetService.verifyErr" .TaskResult | noop -}}
    {{- end }}
---
#Runtask #5
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-list-cstorvolume
  namespace: default
spec:
  meta: |
    id: listCStorVolume
    apiVersion: openebs.io/v1alpha1
    kind: CStorVolume
    action: list
    runNamespace: {{ .UpgradeItem.namespace }}
    options: |-
      labelSelector: openebs.io/persistent-volume={{ .UpgradeItem.name }}
  post: |
    {{- jsonpath .JsonResult "{.items[*].metadata.name}" | trim | saveAs "listCStorVolume.items" .TaskResult | noop -}}
    {{- .TaskResult.listCStorVolume.items | notFoundErr "cstor volume cr not found" | saveIf "listCStorVolume.notFoundErr" .TaskResult | noop -}}

    {{- jsonpath .JsonResult "{.items[0].metadata.labels.openebs\\.io/version}" | trim | saveAs "listCStorVolume.labels" .TaskResult | noop -}}

    {{- $message := printf "cStor volume for this PV {%s} is : {%s}" .UpgradeItem.name .TaskResult.listCStorVolume.items -}}
    {{- $status :="" }}
    {{- $verifyErrMessage:= "cStor volume version is not 0.8.2" -}}

    {{- $isBaseVersion := eq .TaskResult.listCStorVolume.labels .Config.baseVersion.value -}}
    {{- $isTargetVersion := eq .TaskResult.listCStorVolume.labels .Config.targetVersion.value -}}
    {{- if or $isBaseVersion $isTargetVersion -}}
    {{- $status =.Config.successStatus.value }}
    {{- else }}
    {{- $status =.Config.failStatus.value }}
    {{- end }}

    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-list-cstorvolume" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}

    {{- if eq $status .Config.failStatus.value }}
    {{- verifyErr $verifyErrMessage true | saveAs "listCStorVolume.verifyErr" .TaskResult | noop -}}
    {{- end }}

---
# Runtask #6
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-list-cstorvolumereplicas
  namespace: default
spec:
  meta: |
    id: listCStorVolumeReplica
    apiVersion: openebs.io/v1alpha1
    kind: CStorVolumeReplica
    action: list
    runNamespace: {{ .UpgradeItem.namespace }}
    options: |-
      labelSelector: openebs.io/persistent-volume={{ .UpgradeItem.name }}
  post: |
    {{- jsonpath .JsonResult "{range .items[*]}{@.metadata.name} {end}" | trim | saveAs "listCStorVolumeReplica.items" .TaskResult | noop -}}
    {{- .TaskResult.listCStorVolumeReplica.items | notFoundErr "cstor volume replicas not found" | saveIf "listCStorVolumeReplica.notFoundErr" .TaskResult | noop -}}
    {{- jsonpath .JsonResult "{.items[*].metadata.labels.openebs\\.io/version}" | trim | toString | saveAs "listCStorVolumeReplica.version" .TaskResult | noop -}}


    {{- jsonpath .JsonResult "{.items[0].metadata.labels.openebs\\.io/cloned}" | trim | saveAs "listCStorVolumeReplica.isCloned" .TaskResult | noop -}}

    {{- if eq .TaskResult.listCStorVolumeReplica.isCloned "true" }}
    {{- jsonpath .JsonResult "{.items[0].metadata.annotations.openebs\\.io/source-volume}" | trim | saveAs "listCStorVolumeReplica.sourceVolume" .TaskResult | noop -}}
    {{- else }}
    {{- "" | saveAs "listCStorVolumeReplica.sourceVolume" .TaskResult | noop -}}
    {{- end }}

    {{- $status :="" }}
    {{- $message :="" }}
    {{- $successMessage := printf "Got details of CVR(s), {%s} , successfully for  {%s}" .UpgradeItem.name .TaskResult.listCStorVolume.items -}}
    {{- $errorMessage := printf "CVR(s) {%s} version not in 0.8.2" .ListItems.cvrVersionList.version -}}
    {{- $verifyErrMessage := "cStor volume replica(s) version is not 0.8.2" -}}
    {{- $inVersion := "0.8.2" }}
    {{- $baseVersion := .Config.baseVersion.value -}}
    {{- $targetVersion := .Config.targetVersion.value -}}

    {{- $versionList := jsonpath .JsonResult "{range .items[*]}pkey=version,{@.metadata.name}={@.metadata.labels.openebs\\.io/version};{end}" | trim | default "" | splitList ";" -}}
    {{- $versionList | keyMap "cvrVersionList" .ListItems | noop -}}

    {{- range $cvr, $version := .ListItems.cvrVersionList.version }}
    {{- $isNotBaseVersion := ne $version $baseVersion -}}
    {{- $isNotTargetVersion := ne $version $targetVersion -}}
    {{- if and $isNotBaseVersion $isNotTargetVersion }}

    {{- $inVersion = "false" }}
    {{- end }}
    {{- end }}

    {{- if contains "0.8.2" $inVersion }}
    {{- $message = $successMessage -}}
    {{- $status =.Config.successStatus.value }}

    {{- else }}
    {{- $message = $errorMessage -}}
    {{- $status =.Config.failStatus.value }}
    {{- end }}

    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-list-cstorvolumereplicas" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}

    {{- if eq $status .Config.failStatus.value }}
    {{- verifyErr $verifyErrMessage true | saveAs "listCStorVolumeReplica.verifyErr" .TaskResult | noop -}}
    {{- end }}
---
# Runtask #7
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-patch-target-deployment-latest-image
  namespace: default
spec:
  meta: |
    id: patchTargetDeployment
    apiVersion: extensions/v1beta1
    kind: Deployment
    runNamespace: {{ .UpgradeItem.namespace }}
    objectName: {{ .TaskResult.listTargetDeployment.targetDeploymentName }}
    action: patch
  task: |-
    type: strategic
    pspec: |-
      metadata:
        labels:
          openebs.io/version: {{ .Config.targetVersion.value}}
      spec:
        template:
          metadata:
            labels:
              openebs.io/version: {{ .Config.targetVersion.value }}
          spec:
            containers:
            - name: cstor-istgt
              image: quay.io/openebs/cstor-istgt:{{ .Config.targetVersion.value}}
            - name: maya-volume-exporter
              image: quay.io/openebs/m-exporter:{{ .Config.targetVersion.value}}
            - name: cstor-volume-mgmt
              image: quay.io/openebs/cstor-volume-mgmt:{{ .Config.targetVersion.value}}
  post: |-
   {{- $message := printf "Successfully patched target deployment {%s}." .TaskResult.listTargetDeployment.targetDeploymentName -}}
   {{- $status := .Config.successStatus.value -}}
   {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
   {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
   {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-patch-target-deployment-latest-image" -}}
   {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
   {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
   {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
   {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
   {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}

---
# Runtask #8
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-post-check-deployment-rollout-status-latest-image
  namespace: default
spec:
  meta: |
    id: postCheckDeploymentRollout
    apiVersion: extensions/v1beta1
    kind: Deployment
    action: rolloutstatus
    objectName: {{ .TaskResult.listTargetDeployment.targetDeploymentName }}
    runNamespace: {{ .UpgradeItem.namespace }}
    retry: "20,20s"
  post: |
    {{- jsonpath .JsonResult "{.isRolledout}" | trim | saveAs "postCheckDeploymentRollout.isRolledout" .TaskResult | noop -}}
    {{- jsonpath .JsonResult "{.message}" | trim | saveAs "postCheckDeploymentRollout.rolloutStatus" .TaskResult | noop -}}

    {{- $status := "" -}}
    {{- $verifyErrMessage := "Target deployment roll out not successfull" -}}

    {{- if eq .TaskResult.postCheckDeploymentRollout.isRolledout  "true" }}
    {{- $status = .Config.successStatus.value -}}
    {{- else }}
    {{- "waiting for deployment rollout" | saveAs "postCheckDeploymentRollout.verifyErr" .TaskResult | noop -}}
    {{- $status = .Config.failStatus.value -}}
    {{- end }}

    {{- $message := printf "%s name: {%s} namespace: {%s}" .TaskResult.patchDeploymentImageStatus.rolloutStatus .UpgradeItem.name .UpgradeItem.namespace -}}

    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-post-check-deployment-rollout-status-latest-image" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- if eq $status .Config.failStatus.value }}
    {{- verifyErr $verifyErrMessage true | saveAs "postCheckDeploymentRollout.verifyErr" .TaskResult | noop -}}
    {{- end }}
---
# Runtask #9
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-post-check-patch-deployment-image
  namespace: default
spec:
  meta: |
    id: postCheckDeploymentImagePatch
    apiVersion: extensions/v1beta1
    kind: Deployment
    action: get
    objectName: {{ .TaskResult.listTargetDeployment.targetDeploymentName }}
    runNamespace: {{ .UpgradeItem.namespace }}
  post: |

    {{- jsonpath .JsonResult "{.spec.template.spec.containers[?(@.name=='cstor-istgt')].image}" | trim | saveAs "postCheckDeploymentImagePatch.istgtimage" .TaskResult | noop -}}
    {{- jsonpath .JsonResult "{.spec.template.spec.containers[?(@.name=='maya-volume-exporter')].image}" | trim | saveAs "postCheckDeploymentImagePatch.exporterimage" .TaskResult | noop -}}
    {{- jsonpath .JsonResult "{.spec.template.spec.containers[?(@.name=='cstor-volume-mgmt')].image}" | trim | saveAs "postCheckDeploymentImagePatch.volmgmtimage" .TaskResult | noop -}}

    {{ $isNewIstgt := contains .Config.targetVersion.value .TaskResult.postCheckDeploymentImagePatch.istgtimage }}
    {{ $isNewExporter := contains .Config.targetVersion.value .TaskResult.postCheckDeploymentImagePatch.exporterimage }}
    {{ $isNewVolMgmt := contains .Config.targetVersion.value .TaskResult.postCheckDeploymentImagePatch.volmgmtimage }}



    {{- $status := "" -}}
    {{- $verifyErrMessage := "Target pod container images not foud in target version" -}}

    {{- if and $isNewIstgt $isNewExporter $isNewVolMgmt }}
    {{- $status = .Config.successStatus.value -}}
    {{- else }}
    {{- $status = .Config.failStatus.value -}}
    {{- end }}

    {{- $message := printf "pool image :{%s} pool mgmt image :{%s} maya-exporter image : {%s}" .TaskResult.postCheckDeploymentImagePatch.cstorpoolimage .TaskResult.postCheckDeploymentImagePatch.cstorpoolmgmtimage .TaskResult.postCheckDeploymentImagePatch.mayaexporterimage -}}

    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-post-check-patch-deployment-image" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}

    {{- if eq $status .Config.failStatus.value }}
    {{- verifyErr $verifyErrMessage true | saveAs "postCheckDeploymentImagePatch.verifyErr" .TaskResult | noop -}}
    {{- end }}
---
# Runtask 10
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-patch-target-svc
  namespace: default
spec:
  meta: |
    id: patchTargetSVC
    apiVersion: v1
    kind: Service
    runNamespace: {{ .UpgradeItem.namespace }}
    objectName: {{ .TaskResult.listTargetService.items }}
    action: patch
  task: |-
    type: merge
    pspec: |-
      metadata:
        labels:
          openebs.io/persistent-volume-claim: {{ .TaskResult.listTargetDeployment.pvcName }}
          openebs.io/version: {{ .Config.targetVersion.value }}
  post: |-
    {{- $message := printf "version label successfully patched for target service {%s}." .TaskResult.listTargetService.items -}}

    {{- $status := .Config.successStatus.value -}}
    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-patch-target-svc" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}

---
# Runtask #11
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-post-check-target-svc
  namespace: default
spec:
  meta: |
    id: postCheckTargetSVC
    apiVersion: v1
    kind: Service
    action: get
    objectName: {{ .TaskResult.listTargetService.items }}
    runNamespace: {{ .UpgradeItem.namespace }}
  post: |
    {{- jsonpath .JsonResult "{.metadata.labels.openebs\\.io/version}" | trim | saveAs "postCheckTargetSVC.version" .TaskResult | noop -}}


    {{- $status := "" -}}
    {{- if ne .TaskResult.postCheckTargetSVC.version .Config.targetVersion.value }}
    {{- $status = .Config.failStatus.value -}}
    {{- else }}
    {{- $status = .Config.successStatus.value -}}
    {{- end }}
    {{- $message := printf "version label value for target service- {%s}" .TaskResult.postCheckTargetSVC.version -}}

    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-post-check-target-svc" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}
---
# Runtask #12
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-patch-cstor-volume
  namespace: default
spec:
  meta: |
    id: patchCStorVolume
    apiVersion: openebs.io/v1alpha1
    kind: CStorVolume
    runNamespace: {{ .UpgradeItem.namespace }}
    objectName: {{ .TaskResult.listCStorVolume.items }}
    action: patch
  task: |-
    type: merge
    pspec: |-
      metadata:
        labels:
          {{- if eq .TaskResult.listCStorVolumeReplica.isCloned "true" }}
          openebs.io/source-volume: {{ .TaskResult.listCStorVolumeReplica.sourceVolume }}
          {{- end }}
          openebs.io/version: {{ .Config.targetVersion.value }}
  post: |
    {{- $message := printf "version label successfully patched for cstor volume  {%s}." .TaskResult.listCStorVolume.items -}}

    {{- $status := .Config.successStatus.value -}}
    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-patch-cstor-volume" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}

---
# Runtask #13
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-post-check-cstor-volume-cr
  namespace: default
spec:
  meta: |
    id: postCheckCStorVolume
    apiVersion: openebs.io/v1alpha1
    kind: CStorVolume
    action: get
    objectName: {{ .TaskResult.listCStorVolume.items }}
    runNamespace: {{ .UpgradeItem.namespace }}
  post: |
    {{- jsonpath .JsonResult "{.metadata.labels.openebs\\.io/version}" | trim | saveAs "postCheckCStorVolume.version" .TaskResult | noop -}}

    {{- $status := "" -}}
    {{- if ne .TaskResult.postCheckCStorVolume.version .Config.targetVersion.value }}
    {{- $status = .Config.failStatus.value -}}
    {{- else }}
    {{- $status = .Config.successStatus.value -}}
    {{- end }}
    {{- $message := printf "version label value for target service- {%s}" .TaskResult.postCheckCStorVolume.version -}}

    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-post-check-cstor-volume-cr" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}
---
# Runtask #14
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-patch-cstor-volume-replica
  namespace: default
spec:
  meta: |
    {{- $cstorVolReplicaList := .TaskResult.listCStorVolumeReplica.items | default "" | splitList " " -}}
    id: patchCStorVolumeReplica
    apiVersion: openebs.io/v1alpha1
    kind: CStorVolumeReplica
    runNamespace: {{ .UpgradeItem.namespace }}
    action: patch
    repeatWith:
      metas:
      {{- range $k, $cvr := $cstorVolReplicaList }}
      - objectName: {{ $cvr }}
      {{- end }}
  task: |-
    type: merge
    pspec: |-
      metadata:
        labels:
          openebs.io/version: {{ .Config.targetVersion.value }}
  post: |

    {{- $message := printf "successfully patched cStor volume replicas  {%s}." .TaskResult.listCStorVolumeReplica.items -}}

    {{- $status := .Config.successStatus.value -}}
    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-patch-cstor-volume-replica" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}

---
# Runtask #15
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-post-check-cstor-volume-replicas
  namespace: default
spec:
  meta: |
    id: postCheckCStorVolumeReplica
    apiVersion: openebs.io/v1alpha1
    kind: CStorVolumeReplica
    action: list
    runNamespace: {{ .UpgradeItem.namespace }}
    options: |-
      labelSelector: openebs.io/persistent-volume={{ .UpgradeItem.name }}
  post: |
    {{- jsonpath .JsonResult "{.items[*].metadata.labels.openebs\\.io/version}" | trim | saveAs "postCheckCStorVolumeReplica.version" .TaskResult | noop -}}

    {{- $message := printf "CVRs {%s} version got successfully updated" .TaskResult.listCStorVolumeReplica.items -}}
    {{- $status :="" }}
    {{- $verifyErrMessage := "cStor volume replica(s) version is not 0.9.0" -}}
    {{- $errorMessage := printf "CVRs {%s} version update failed" .TaskResult.listCStorVolumeReplica.items -}}

    {{- if contains .Config.baseVersion.value .TaskResult.postCheckCStorVolumeReplica.version }}
    {{- $status =.Config.failStatus.value }}
    {{- $message = $errorMessage -}}
    {{- else }}
    {{- $status =.Config.successStatus.value }}
    {{- end }}

    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-post-check-cstor-volume-replicas" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}

    {{- if eq $status .Config.failStatus.value }}
    {{- verifyErr $verifyErrMessage true | saveAs "postCheckCStorVolumeReplica.verifyErr" .TaskResult | noop -}}
    {{- end }}
---
# Runtask #16
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-list-target-replicaset
  namespace: default
spec:
  meta: |
    id: listReplicaSet
    apiVersion: extensions/v1beta1
    kind: ReplicaSet
    action: list
    runNamespace: {{ .UpgradeItem.namespace }}
    options: |-
      labelSelector: openebs.io/persistent-volume={{ .UpgradeItem.name }},app=cstor-volume-manager
  post: |
    {{- $CustomJsonpath := printf "{range .items[?(@.metadata.ownerReferences[0].name== '%s-target')]}{@.metadata.name} {end}" .UpgradeItem.name -}}
    {{- jsonpath .JsonResult $CustomJsonpath | trim | replace " " "," | saveAs "listReplicaSet.list" .TaskResult | noop -}}

    {{- $status := .Config.successStatus.value -}}
    {{- $message := printf "ReplicaSet list {%s}" .TaskResult.listReplicaSet.list -}}

    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-list-target-replicaset" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}
---
# Runtask #17
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-list-target-pod
  namespace: default
spec:
  meta: |
    id: listPod
    apiVersion: v1
    kind: Pod
    action: list
    runNamespace: {{ .UpgradeItem.namespace }}
    options: |-
      labelSelector: openebs.io/persistent-volume={{ .UpgradeItem.name }},app=cstor-volume-manager
  post: |
    {{- $CustomJsonpath := printf "{range .items[?(@.metadata.ownerReferences[0].name== '%s')]}{@.metadata.name}{end}" .TaskResult.newReplicaset.name -}}
    {{- $podrsPairs := jsonpath .JsonResult "{range .items[*]}{@.metadata.name},{@.metadata.ownerReferences[0].name} {end}" | trim | default "" | splitList " " -}}
    {{- $podrsPairs| saveAs "listPod.map" .TaskResult -}}

    {{ $podName := "" }}
    {{ $replicasetName := "" }}
    {{ $replicaset := "" }}
    {{ $match := "" }}
    {{ $status := .Config.successStatus.value }}
    {{ $replicasetList := .TaskResult.listReplicaSet.list | splitList "," }}

    {{- range $k, $v := .TaskResult.listPod.map }}
    {{ $k := $k }}
    {{ $v := $v }}
    {{- $replicaset = $v | splitList "," | last -}}
    {{- $match := pickContains $replicaset $replicasetList -}}

    {{- if ne $match "" }}
    {{ $podName = $v | splitList "," | first }}
    {{ $replicasetName = $v | splitList "," | last }}
    {{- end }}

    {{ $match = "" }}

    {{- end }}

    {{ $staleReplicaset := .TaskResult.listReplicaSet.list | replace $replicasetName ""}}
    {{ $staleReplicaset = $staleReplicaset | replace ",," "," }}
    {{ $staleReplicaset = $staleReplicaset | replace "," " " | trim }}
    {{ $staleReplicaset = $staleReplicaset | replace " " "," }}

    {{- $podName | saveAs "listPod.podName" .TaskResult -}}
    {{- $replicasetName | saveAs "listPod.replicasetName" .TaskResult -}}
    {{- $staleReplicaset | saveAs "listPod.staleReplicaset" .TaskResult -}}

    {{- $message := printf "pool Pod-ReplicaSet map: {%s}\nstale ReplicaSet list: {%s}" .TaskResult.listPod.map .TaskResult.listPod.staleReplicaset -}}

    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-list-target-pod" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}
---
# Runtask #18
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-delete-stale-replicaset-target
  namespace: default
spec:
  meta: |
    id: deleteStaleReplicaSet
    apiVersion: extensions/v1beta1
    kind: ReplicaSet
    action: delete
    runNamespace: {{ .UpgradeItem.namespace }}
    objectName: {{ .TaskResult.listPod.staleReplicaset }}
    disable: {{ eq .TaskResult.listPod.staleReplicaset "" }}
  post: |
    {{- $message := printf "stale replicaset {%s} successfully deleted in {%s} namespace." .TaskResult.listPod.staleReplicaset .UpgradeItem.namespace -}}

    {{- $taskStatus := upgradeResultWithTaskStatus .Config.successStatus.value -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-delete-stale-replicaset-target" -}}
    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}
---
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-list-volumesnapshot
  namespace: default
spec:
  meta: |
    id: listVolumeSnapshotDetails
    apiVersion: v1
    kind: VolumeSnapshot
    action: list
    options: |-
      labelSelector: SnapshotMetadata-PVName={{ .UpgradeItem.name }}
  post: |
    {{- jsonpath .JsonResult "{.items[*].spec.snapshotDataName}" | trim | saveAs "listVolumeSnapshotDetails.snapshotDataNames" .TaskResult | noop -}}

    {{- .TaskResult.listVolumeSnapshotDetails.snapshotDataNames | toString | saveAs "listVolumeSnapshotDetails.volumeSnapshotData" .TaskResult | noop -}}
    {{- if eq .TaskResult.listVolumeSnapshotDetails.volumeSnapshotData "" }}
    {{- printf "false" | saveAs "listVolumeSnapshotDetails.isExist" .TaskResult }}
    {{- else }}
    {{- printf "true" | saveAs "listVolumeSnapshotDetails.isExist" .TaskResult }}
    {{- end }}

    {{- $message := printf "details of volumesnapshotdata {%s} for volume: {%s}" .TaskResult.listVolumeSnapshotDetails.snapshotDataNames .UpgradeItem.name -}}
    {{- $status :=.Config.successStatus.value -}}

    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-list-volumesnapshot" -}}
    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}
---
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-patch-volumesnapshotdatadata
  namespace: default
spec:
  meta: |
    {{- $snapshotDataList := .TaskResult.listVolumeSnapshotDetails.snapshotDataNames | default "" | splitList " " -}}
    id: patchSnapData
    apiVersion: v1
    kind: VolumeSnapshotData
    action: patch
    disable: {{ eq .TaskResult.listVolumeSnapshotDetails.isExist "false" }}
    repeatWith:
      metas:
      {{- range $k, $snapData := $snapshotDataList }}
      - objectName: {{ $snapData }}
      {{- end }}
  task: |-
    type: merge
    pspec: |-
      spec:
        openebsVolume:
          capacity: {{ .TaskResult.getVolDetails.pvCapacity }}
  post: |
    {{- $message := printf "volume snapshotdatas are patched with capacity: {%s}" .TaskResult.getVolDetails.pvCapacity -}}
    {{- $status := .Config.successStatus.value -}}

    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-patch-volumesnapshotdatadata" -}}
    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}
---
apiVersion: openebs.io/v1alpha1
kind: RunTask
metadata:
  name: upgrade-cstor-volume-082-090-post-check-volumesnapshotdata
  namespace: default
spec:
  meta: |
    {{- $snapshotDataList := .TaskResult.listVolumeSnapshotDetails.snapshotDataNames | default "" | splitList " " -}}
    id: getVolumeSnapshotDataDetails
    apiVersion: v1
    kind: VolumeSnapshotData
    action: get
    disable: {{ eq .TaskResult.listVolumeSnapshotDetails.isExist "false" }}
    repeatWith:
      metas:
      {{- range $k, $snapData := $snapshotDataList }}
      - objectName: {{ $snapData }}
      {{- end }}
  post: |
    {{- jsonpath .JsonResult "{.spec.openebsVolume.capacity}" | trim | saveAs "getVolumeSnapshotDataDetails.capacity" .TaskResult | noop -}}

    {{- $URName := upgradeResultWithTaskOwnerName .UpgradeItem.upgradeResultName -}}
    {{- $URNamespace := upgradeResultWithTaskOwnerNamespace .UpgradeItem.upgradeResultNamespace -}}
    {{- $taskName := upgradeResultWithTaskName "upgrade-cstor-volume-082-090-post-check-volumesnapshotdata" -}}
    {{- $taskStartTime := upgradeResultWithTaskStartTime now -}}
    {{- $taskEndTime := upgradeResultWithTaskEndTime now -}}

    {{- $status := "" -}}
    {{- $message := "" -}}

    {{- if eq .TaskResult.getVolumeSnapshotDataDetails.capacity .TaskResult.getVolDetails.pvCapacity }}
    {{- $status = .Config.successStatus.value -}}
    {{- $message = printf "patched volume snapshot data successfully" -}}
    {{- else }}
    {{- $status = .Config.failStatus.value -}}
    {{- $message = printf "failed to patch volume snapshot data" -}}
    {{- end }}

    {{- $taskStatus := upgradeResultWithTaskStatus $status -}}
    {{- $taskMessage := upgradeResultWithTaskMessage $message -}}
    {{- upgradeResultUpdateTasks $taskStartTime $URName $URNamespace $taskName $taskStatus $taskMessage $taskEndTime -}}
