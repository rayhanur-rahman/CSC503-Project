---
- name: Set installation directory variable
  set_fact:
    install_dir: "/opt/anaconda3"
    conda_dli_powerai_packages:
          - "powerai==1.6.1"
          - "keras==2.2.4"
    conda_dli_packages:
          - "configparser==3.7.4"
          - "ipython==5.3.0 python-lmdb==0.94 nose==1.3.7 requests==2.13.0 pathlib==1.0.1"
          - "redis-py==2.10.5 chardet==3.0.4 flask==1.0.2"
          - "python-gflags==3.1.2 pandas==0.24.2 pyzmq==17.1.2"
    conda_dlinsights_packages:
          - "numpy==1.12.1"
          - "pyopenssl==18.0.0"
          - "Flask==0.12.2 Flask-Cors==3.0.3 scipy==1.0.1 pathlib==1.0.1 SQLAlchemy==1.1.13 requests==2.21 alembic==1.0.5"
    pip_dlinsights_packages: # py3 and py2
          - "warlock==1.3.0 elasticsearch==5.2.0 Flask-Script==2.0.5 Flask-HTTPAuth==3.2.2 mongoengine==0.11.0  python-heatclient==1.2.0 python-keystoneclient==3.17.0"
    pip_dli_packages: # py3 and py2
          - "easydict==1.9"
          - "hanziconv==0.3.2 gensim==3.6.0"
    pip2_dli_packages:  # py2 only
          - "trollius==2.2"
          - "weave==0.16.0 ipaddress==1.0.22 defusedxml==0.5.0"
    pip3_dli_packages:  # py3 only
          - "asyncio==3.4.3 ipaddress==1.0.22 defusedxml==0.5.0"

- name: Get route to client
  command: "{{ python_executable_local }} \
  {{ scripts_path_local }}/python/ip_route_get_to.py \
  {{ inventory_hostname }}"
  delegate_to: localhost
  register: host_ip

- name: Set pypi url for eng mode
  set_fact:
    pypi_url: "https://pypi.org/simple"
    trusted_host: "pypi.org"
  when: eng_mode and public

- name: Set pypi url for normal mode
  set_fact:
    pypi_url: "http://{{ host_ip.stdout }}{{ pypi_http_path }}"
    trusted_host: "{{ host_ip.stdout }}"
  when: not eng_mode or not public

- name: Install openssh-client
  yum:
    name: openssh-clients
    state: latest
  become: yes

- name: Check if Anaconda dlipy3 environment already exists
  stat:
    path: "{{ install_dir }}/envs/dlipy3"
  register: conda_dlipy3_env

- name: "Create an Anaconda environment named dlipy3 for installing IBM \
         Spectrum Conductor Deep Learning Impact"
  shell: >
    {{ install_dir }}/bin/conda create --name dlipy3 --yes pip python=3.6
  when: not conda_dlipy3_env.stat.exists
  become: yes

- name: Activate dlipy3 environment and install powerai
  shell: >
    source {{ install_dir }}/bin/activate dlipy3 &&
    {{ install_dir }}/bin/conda install --yes --no-update-deps {{ item }}
  become: yes
  with_items: "{{ conda_dli_powerai_packages }}"

- name: Activate dlipy3 environment and install dependencies
  shell: >
    source {{ install_dir }}/bin/activate dlipy3 &&
    {{ install_dir }}/bin/conda install --yes --no-update-deps {{ item }}
  become: yes
  with_items: "{{ conda_dli_packages }}"

- name: Activate dlipy3 environment and install python  dependencies
  shell: >
    source {{ install_dir }}/bin/activate dlipy3 &&
    pip install --index-url {{ pypi_url }} {{ item }}
    --trusted-host {{ trusted_host }}
  become: yes
  with_items: "{{ pip_dli_packages }}"

- name: Activate dlipy3 environment and install python3 dependencies
  shell: >
    source {{ install_dir }}/bin/activate dlipy3 &&
    pip install --index-url {{ pypi_url }} {{ item }}
    --trusted-host {{ trusted_host }}
  become: yes
  with_items: "{{ pip3_dli_packages }}"

- name: Check if Anaconda dlipy2 environment already exists
  stat:
    path: "{{ install_dir }}/envs/dlipy2"
  register: conda_dlipy2_env

- name: "Create an Anaconda environment named dlipy2 for installing IBM \
         Spectrum Conductor Deep Learning Impact"
  shell: "{{ install_dir }}/bin/conda create --name dlipy2 --yes pip python=2.7"
  when: not conda_dlipy2_env.stat.exists
  become: yes

- name: Activate dlipy2 environment and install powerai
  shell: >
    source {{ install_dir }}/bin/activate dlipy2 &&
    {{ install_dir }}/bin/conda install --yes --no-update-deps {{ item }}
  become: yes
  with_items: "{{ conda_dli_powerai_packages }}"

- name: Activate dlipy2 environment and install dependencies
  shell: >
    source {{ install_dir }}/bin/activate dlipy2 &&
    {{ install_dir }}/bin/conda install --yes --no-update-deps {{ item }}
  become: yes
  with_items: "{{ conda_dli_packages }}"

- name: Activate dlipy2 environment and install python  dependencies
  shell: >
    source {{ install_dir }}/bin/activate dlipy2 &&
    pip install --index-url {{ pypi_url }} {{ item }}
    --trusted-host {{ trusted_host }}
  become: yes
  with_items: "{{ pip_dli_packages }}"

- name: Activate dlipy2 environment and install python3 dependencies
  shell: >
    source {{ install_dir }}/bin/activate dlipy2 &&
    pip install --index-url {{ pypi_url }} {{ item }}
    --trusted-host {{ trusted_host }}
  become: yes
  with_items: "{{ pip2_dli_packages }}"

- name: Install elastic distributed training dependencies
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - openblas-devel
    - glog-devel
    - gflags-devel
    - hdf5-devel
    - leveldb-devel
    - libsodium-devel
    - lmdb-devel
  become: yes

- name: Install additional dependency packages
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - gcc-c++
    - gcc-gfortran
    - freetype-devel
    - libpng-devel
    - libffi-devel
    - openssl-devel
  become: yes

- name: Check if Anaconda dlinsights environment already exists
  stat:
    path: "{{ install_dir }}/envs/dlinsights"
  register: conda_dlinsights_env

- name: "Create an Anaconda environment named dlinsights for IBM Spectrum \
         Conductor Deep Learning Impact training insights"
  shell: >
    {{ install_dir }}/bin/conda create --name dlinsights --yes pip python=2.7
  when: not conda_dlinsights_env.stat.exists
  become: yes

- name: Activate dlinsights environment and install dependencies
  shell: >
    source {{ install_dir }}/bin/activate dlinsights &&
    {{ install_dir }}/bin/conda install --yes --no-update-deps {{ item }}
  become: yes
  with_items: "{{ conda_dlinsights_packages }}"

- name: Activate dlinsights environment and install python  dependencies
  shell: >
    source {{ install_dir }}/bin/activate dlinsights &&
    pip install --index-url {{ pypi_url }} {{ item }}
    --trusted-host {{ trusted_host }}
  become: yes
  with_items: "{{ pip_dlinsights_packages }}"
