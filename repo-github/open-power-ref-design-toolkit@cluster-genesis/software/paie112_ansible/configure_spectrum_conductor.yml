---
- name: Set installation directory variable
  set_fact:
    install_dir: "/opt/anaconda3"

- name: Get route to client
  command: "{{ hostvars['localhost']['python_executable_local'] }} \
  {{ hostvars['localhost']['scripts_path_local'] }}/python/ip_route_get_to.py \
  {{ inventory_hostname }}"
  delegate_to: localhost
  register: host_ip

- name: Install NCCL1 from the PowerAI repository
  yum:
    name: libnccl*
    state: latest
  become: yes

- name: Check if Anaconda dlipy3 environment already exists
  stat:
    path: "{{ install_dir }}/envs/dlipy3"
  register: conda_dlipy3_env

- name: "Create an Anaconda environment named dlipy3 for installing IBM \
         Spectrum Conductor Deep Learning Impact"
  shell: "{{ install_dir }}/bin/conda create --name dlipy3 --yes pip python=3.6"
  when: not conda_dlipy3_env.stat.exists
  become: yes

- name: Install PowerAI deep learning dependencies
  shell: "PATH={{ install_dir }}/bin:$PATH {{ item }}"
  loop:
    - /opt/DL/tensorflow/bin/install_dependencies -n dlipy3 -y
    - /opt/DL/tensorboard/bin/install_dependencies -n dlipy3 -y
    - /opt/DL/pytorch/bin/install_dependencies -n dlipy3 -y
    - /opt/DL/caffe/bin/install_dependencies -n dlipy3 -y
  become: yes

- name: Activate dlipy3 environment and install dependencies
  shell: "source {{ install_dir }}/bin/activate dlipy3 && {{ item }}"
  loop:
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      cython==0.25.2 ipython==5.3.0 nose==1.3.7 pandas==0.20.3 requests==2.13.0 \
      scipy==1.1.0 six==1.11.0 redis-py==2.10.5 chardet==3.0.4"
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      psutil==5.4.7 flask==1.0.2 configparser==3.5.0"
    - "pip install --index-url http://{{ host_ip.stdout }}/repos/pypi/simple \
      Keras==2.0.5 easydict==1.6 python-gflags==2.0 ipaddress==1.0.22 --trusted-host \
      {{ host_ip.stdout }}"
  become: yes

- name: Install additional packages for large model support
  shell: "source {{ install_dir }}/bin/activate dlipy3 && pip install \
         --index-url http://{{ host_ip.stdout }}/repos/pypi/simple \
         hanziconv gensim --trusted-host {{ host_ip.stdout }}"
  become: yes

- name: Check if Anaconda dlipy2 environment already exists
  stat:
    path: "{{ install_dir }}/envs/dlipy2"
  register: conda_dlipy2_env

- name: "Create an Anaconda environment named dlipy2 for installing IBM \
         Spectrum Conductor Deep Learning Impact"
  shell: "{{ install_dir }}/bin/conda create --name dlipy2 --yes pip python=2.7"
  when: not conda_dlipy2_env.stat.exists
  become: yes

- name: Install PowerAI deep learning dependencies
  shell: "PATH={{ install_dir }}/bin:$PATH {{ item }}"
  loop:
    - /opt/DL/tensorflow/bin/install_dependencies -n dlipy2 -y
    - /opt/DL/tensorboard/bin/install_dependencies -n dlipy2 -y
    - /opt/DL/pytorch/bin/install_dependencies -n dlipy2 -y
    - /opt/DL/caffe/bin/install_dependencies -n dlipy2 -y
  become: yes

- name: Activate dlipy2 environment and install dependencies
  shell: "source {{ install_dir }}/bin/activate dlipy2 && {{ item }}"
  loop:
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      cython==0.25.2 ipython==5.3.0 nose==1.3.7 pandas==0.20.3 requests==2.13.0 \
      scipy==1.1.0 six==1.11.0 redis-py==2.10.5 chardet==3.0.4"
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      psutil==5.4.7 configparser==3.5.0 flask==1.0.2"
    - "pip install --index-url http://{{ host_ip.stdout }}/repos/pypi/simple \
      Keras==2.0.5 easydict==1.6 python-gflags==2.0 ipaddress==1.0.22 --trusted-host \
      {{ host_ip.stdout }}"
  become: yes

- name: Install additional packages for large model support
  shell: "source {{ install_dir }}/bin/activate dlipy2 && pip install \
         --index-url http://{{ host_ip.stdout }}/repos/pypi/simple \
         hanziconv gensim --trusted-host {{ host_ip.stdout }}"
  become: yes

- name: Install elastic distributed training dependencies
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - openblas-devel
    - glog-devel
    - gflags-devel
    - hdf5-devel
    - leveldb-devel
    - libsodium-devel
    - lmdb-devel
  become: yes

- name: Install additional dependency packages
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - gcc-c++
    - gcc-gfortran
    - freetype-devel
    - libpng-devel
    - libffi-devel
    - openssl-devel
  become: yes

- name: Check if Anaconda dlinsights environment already exists
  stat:
    path: "{{ install_dir }}/envs/dlinsights"
  register: conda_dlinsights_env

- name: "Create an Anaconda environment named dlinsights for IBM Spectrum \
         Conductor Deep Learning Impact training insights"
  shell: "{{ install_dir }}/bin/conda create --name dlinsights --yes pip python=2.7"
  when: not conda_dlinsights_env.stat.exists
  become: yes

- name: Activate dlinsights and install dependencies
  shell: "source {{ install_dir }}/bin/activate dlinsights && {{ item }}"
  loop:
    - "pip install --retries 1 --timeout 5 \
      --index-url http://{{ host_ip.stdout }}/repos/pypi/simple \
      numpy==1.12.1 pbr==4.2.0  --trusted-host {{ host_ip.stdout }}"
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      pyopenssl==18.0.0"
    - "pip install --retries 1 --timeout 5 \
      --index-url http://{{ host_ip.stdout }}/repos/pypi/simple \
      requests==2.14.2 elasticsearch==5.2.0 Flask==0.12.2 Flask-Cors==3.0.3 \
      Flask-Script==2.0.5 Flask-HTTPAuth==3.2.2 mongoengine==0.11.0 \
      pathlib==1.0.1 python-heatclient==1.2.0 \
      SQLAlchemy==1.1.13 scipy==1.0.1 alembic==0.8.2 \
      python-keystoneclient==3.8.0 \
      --trusted-host {{ host_ip.stdout }}"
  become: yes
