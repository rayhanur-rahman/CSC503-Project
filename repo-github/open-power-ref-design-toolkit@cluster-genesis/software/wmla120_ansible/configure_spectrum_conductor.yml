---
- name: Set installation directory variable
  set_fact:
    install_dir: "/opt/anaconda3"

- name: Get route to client
  command: "{{ hostvars['localhost']['python_executable_local'] }} \
  {{ hostvars['localhost']['scripts_path_local'] }}/python/ip_route_get_to.py \
  {{ inventory_hostname }}"
  delegate_to: localhost
  register: host_ip

- name: Set pypi url for eng mode
  set_fact:
    pypi_url: "https://pypi.org/simple"
    trusted_host: "pypi.org"
  when: eng_mode

- name: Set pypi url for normal mode
  set_fact:
    pypi_url: "http://{{ host_ip.stdout }}{{ pypi_http_path }}"
    trusted_host: "{{ host_ip.stdout }}"
  when: not eng_mode

- name: Install openssh-client
  yum:
    name: openssh-clients
    state: latest
  become: yes

- name: Check if Anaconda dlipy3 environment already exists
  stat:
    path: "{{ install_dir }}/envs/dlipy3"
  register: conda_dlipy3_env

- name: "Create an Anaconda environment named dlipy3 for installing IBM \
         Spectrum Conductor Deep Learning Impact"
  shell: "{{ install_dir }}/bin/conda create --name dlipy3 --yes pip python=3.6"
  when: not conda_dlipy3_env.stat.exists
  become: yes

- name: Activate dlipy3 environment and install dependencies
  shell: "source {{ install_dir }}/bin/activate dlipy3 && {{ item }}"
#  shell: "{{ install_dir }}/bin/conda activate dlipy3 && {{ item }}"
  loop:
    - "{{ install_dir }}/bin/conda install --yes powerai=1.6.0"
    - "{{ install_dir }}/bin/conda install --yes keras==2.1.6"
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      cython==0.29.4 ipython==5.3.0 python-lmdb==0.94 nose==1.3.7 requests==2.13.0"
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      redis-py==2.10.5 chardet==3.0.4 flask==1.0.2"
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      python-gflags==3.1.2 pandas==0.24.1 pyzmq==17.1.2"
    - "pip install --index-url {{ pypi_url }} \
      easydict==1.9 --trusted-host {{ trusted_host }}"
    - "pip install --index-url {{ pypi_url }} \
      hanziconv==0.3.2 gensim==3.6.0 --trusted-host {{ trusted_host }}"
    - "pip install --index-url {{ pypi_url }} \
      ipaddress==1.0.22 configparser==3.5.0 easydict==1.9 glog==0.3.1 \
      --trusted-host {{ trusted_host }}"
    - "pip install --index-url {{ pypi_url }} \
      asyncio==3.4.3 --trusted-host {{ trusted_host }}"
  become: yes

- name: Install additional packages for large model support
  shell: "source {{ install_dir }}/bin/activate dlipy3 && pip install \
         --index-url {{ pypi_url }} \
         hanziconv==0.3.2 gensim==3.6.0 --trusted-host {{ trusted_host }}"
  become: yes

- name: Check if Anaconda dlipy2 environment already exists
  stat:
    path: "{{ install_dir }}/envs/dlipy2"
  register: conda_dlipy2_env

- name: "Create an Anaconda environment named dlipy2 for installing IBM \
         Spectrum Conductor Deep Learning Impact"
  shell: "{{ install_dir }}/bin/conda create --name dlipy2 --yes pip python=2.7"
  when: not conda_dlipy2_env.stat.exists
  become: yes

- name: Activate dlipy2 environment and install dependencies
  shell: "source {{ install_dir }}/bin/activate dlipy2 && {{ item }}"
#  shell: "{{ install_dir }}/bin/conda activate dlipy2 && {{ item }}"
  loop:
    - "{{ install_dir }}/bin/conda install --yes powerai=1.6.0"
    - "{{ install_dir }}/bin/conda install --yes keras==2.1.6"
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      cython==0.29.4 ipython==5.3.0 python-lmdb==0.94 nose==1.3.7 requests==2.13.0"
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      redis-py==2.10.5 chardet==3.0.4 flask==1.0.2"
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      python-gflags==3.1.2 pandas==0.24.1 pyzmq==17.1.2"
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      ipaddress==1.0.22 configparser==3.5.0"
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      trollius==2.2"
    - "pip install --index-url {{ pypi_url }} \
      weave==0.16.0 --trusted-host {{ trusted_host }}"
    - "pip install --index-url {{ pypi_url }} \
      ipaddress==1.0.22 configparser==3.5.0 easydict==1.9 glog==0.3.1 \
      --trusted-host {{ trusted_host }}"
    - "pip install --index-url {{ pypi_url }} \
      hanziconv==0.3.2 gensim==3.6.0 --trusted-host {{ trusted_host }}"
  become: yes

- name: Install additional packages for large model support
  shell: "source {{ install_dir }}/bin/activate dlipy2 && pip install \
         --index-url {{ pypi_url }} \
         hanziconv==0.3.2 gensim==3.6.0 --trusted-host {{ trusted_host }}"
  become: yes

- name: Install elastic distributed training dependencies
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - openblas-devel
    - glog-devel
    - gflags-devel
    - hdf5-devel
    - leveldb-devel
    - libsodium-devel
    - lmdb-devel
  become: yes

- name: Install additional dependency packages
  yum:
    name: "{{ packages }}"
    state: latest
  vars:
    packages:
    - gcc-c++
    - gcc-gfortran
    - freetype-devel
    - libpng-devel
    - libffi-devel
    - openssl-devel
  become: yes

- name: Check if Anaconda dlinsights environment already exists
  stat:
    path: "{{ install_dir }}/envs/dlinsights"
  register: conda_dlinsights_env

- name: "Create an Anaconda environment named dlinsights for IBM Spectrum \
         Conductor Deep Learning Impact training insights"
  shell: "{{ install_dir }}/bin/conda create --name dlinsights --yes pip python=2.7"
  when: not conda_dlinsights_env.stat.exists
  become: yes

- name: Activate dlinsights and install dependencies
  shell: "source {{ install_dir }}/bin/activate dlinsights && {{ item }}"
  loop:
    - "pip install --retries 1 --timeout 5 \
      --index-url {{ pypi_url }} \
      numpy==1.12.1 --trusted-host {{ trusted_host }}"
    - "{{ install_dir }}/bin/conda install --yes --no-update-dependencies \
      pyopenssl==18.0.0"
    - "pip install --retries 1 --timeout 5 --no-cache-dir \
      --index-url {{ pypi_url }} \
      requests==2.18.0 elasticsearch==5.2.0 Flask==0.12.2 Flask-Cors==3.0.3 \
      Flask-Script==2.0.5 Flask-HTTPAuth==3.2.2 mongoengine==0.11.0 \
      pathlib==1.0.1 python-heatclient==1.2.0 \
      SQLAlchemy==1.1.13 scipy==1.0.1 alembic==0.8.2 \
      python-keystoneclient==3.17.0 \
      --trusted-host {{ host_ip.stdout }}"
  become: yes
