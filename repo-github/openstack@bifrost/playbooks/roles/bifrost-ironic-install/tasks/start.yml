# Copyright (c) 2015 Hewlett-Packard Development Company, L.P.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: "Reload systemd configuration"
  command: systemctl daemon-reload
  when: init_template == 'systemd_template.j2'

- name: "Ensure rsyslog is running with current config"
  service: name=rsyslog state=restarted
  when: remote_syslog_server is defined and remote_syslog_server != ""

- name: "Start database service"
  service: name={{ mysql_service_name }} state=started enabled=yes

- import_role:
    name: bifrost-rabbitmq
    tasks_from: start
  when: use_rabbitmq

- name: "start ironic-inspector"
  include: inspector_start.yml
  when: enable_inspector | bool == true

- name: "Start ironic-conductor"
  service: name=ironic-conductor state=started enabled=yes

- name: "Start ironic-api"
  service: name=ironic-api state=started enabled=yes

- name: "Start ironic-conductor"
  service: name=ironic-conductor state=restarted

- name: "Start ironic-api"
  service: name=ironic-api state=restarted

# NOTE(Shrews) When testing, we want to use our custom dnsmasq.conf file,
# not the one supplied by libvirt. And the libvirt started dnsmasq processes
# are not controlled by upstart, so we need to manually kill those.
- name: "Stop existing libvirt dnsmasq processes"
  command: killall -w dnsmasq
  when: testing | bool == true and include_dhcp_server | bool == true
  ignore_errors: yes

- name: "Ensure services are running with current config"
  service: name={{ item }} state=restarted enabled=yes
  with_items:
    - xinetd
    - nginx

- name: "Ensure dnsmasq is running with current config"
  service: name={{ item }} state=restarted enabled=yes
  with_items:
    - dnsmasq
  when: include_dhcp_server | bool == true

- name: "Send services a reload signal"
  service: name={{ item }} state=reloaded
  with_items:
    - xinetd
    - nginx

- name: "Send services a force-reload signal"
  service: name=dnsmasq state=restarted
  when: include_dhcp_server | bool == true
