undercloud_generate_service_certificate: false

# This enables the run of several tripleo-validations tests through Mistral
run_tripleo_validations: true
# This enables the run of tripleo-validations negative tests through shell
# scripts
run_tripleo_validations_negative_tests: true
# Exit tripleo-quickstart on validations failure
exit_on_validations_failure: false

# pacemaker settings are configured in the scenario template
# do not set `enable_pacemaker` in the featureset

deployed_server: true
composable_scenario: scenario002-multinode.yaml
validate_template: scenario002-multinode.yaml
composable_roles: true
overcloud_roles:
  - name: Controller
    CountDefault: 1
    tags:
      - primary
      - controller
    networks:
      - External
      - InternalApi
      - Storage
      - StorageMgmt
      - Tenant

# Tempest configuration, keep always at the end of the file
# Use the traditional ping test in newton and ocata
# Run tempest in pike+

test_ping: >-
  {% if release in ['newton', 'ocata'] -%}
  true
  {%- else -%}
  false
  {%- endif -%}

run_tempest: >-
  {% if release in ['newton', 'ocata'] -%}
  false
  {%- else -%}
  true
  {%- endif -%}

# Run tempest in containers when at least undercloud is containerized
tempest_format: >-
  {% if containerized_undercloud|bool -%}
  container
  {%- else -%}
  packages
  {%- endif -%}

test_white_regex: ''
tempest_whitelist_old:
  # Testing zaqar doesn't work yet, but it's in progress
  # - 'zaqar.tests.tempest_plugin.tests.v2.test_queues.TestManageQueue'
  # Testing boot from volume and server connectivity
  - 'tempest.scenario.test_volume_boot_pattern.TestVolumeBootPattern.test_volume_boot_pattern'
  # Testing swift
  - 'tempest.api.object_storage.test_object_services.ObjectTest'
  # Testing cinder volumes encrypted by barbican:
  - 'barbican_tempest_plugin.tests.scenario.test_volume_encryption.VolumeEncryptionTest'
  # TODO(emilien) run autoscaling tests when telemetry works in python-tempestconf
  # - 'ceilometer.tests.tempest.scenario.test_telemetry_integration.TestTelemetryIntegration'
  # TODO(emilien) run ec2api tests when ec2api is supported in python-tempestconf
  # - 'ec2api.tests.functional.api.test_key_pairs.KeyPairTest'

tempest_whitelist_new:
  # Testing zaqar doesn't work yet, but it's in progress
  # - 'zaqar_tempest_plugin.tests.v2.test_queues.TestManageQueue'
  # Testing boot from volume and server connectivity
  - 'tempest.scenario.test_volume_boot_pattern.TestVolumeBootPattern.test_volume_boot_pattern'
  # Testing swift
  - 'tempest.api.object_storage.test_object_services.ObjectTest'
  # Testing cinder volumes encrypted by barbican:
  - 'barbican_tempest_plugin.tests.scenario.test_volume_encryption.VolumeEncryptionTest'
  # - 'telemetry_tempest_plugin.scenario.test_telemetry_integration.TestTelemetryIntegration'
  # TODO(emilien) run ec2api tests when ec2api is supported in python-tempestconf
  # - 'ec2api_tempest_plugin.api.test_key_pairs.KeyPairTest'

tempest_whitelist: >-
  {% if release not in ['newton', 'ocata', 'pike'] -%}{{ tempest_whitelist_new }}
  {%- else -%}{{ tempest_whitelist_old }}
  {%- endif -%}

tempest_plugins_old:
  - python-aodh-tests
  - python-ceilometer-tests
  - python-gnocchi-tests
  - python-barbican-tests-tempest
  - python-zaqar-tests
  - python-ec2-api-tests
tempest_plugins_new:
  - python-telemetry-tests-tempest
  - python-barbican-tests-tempest
  - python-zaqar-tests-tempest
  - python-ec2api-tests-tempest
  - python-heat-tests-tempest
tempest_plugins: >-
  {% if release not in ['newton', 'ocata', 'pike'] -%}{{ tempest_plugins_new }}
  {%- else -%}{{ tempest_plugins_old }}
  {%- endif -%}
tempest_extra_config: >-
  {% if release not in ['newton', 'ocata'] -%}
    {'auth.tempest_roles': '"Member, creator"'}
  {%- endif -%}
