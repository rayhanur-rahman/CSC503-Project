- name: generate convert script
  template:
    src: "{{ convert_image_template }}"
    dest: "{{ convert_image_working_dir }}/convert_image.sh"

- name: check if we have an overcloud-full.qcow2 to start from
  stat:
    path: "{{ convert_image_working_dir }}/overcloud-full.qcow2"
  register: overcloud_full_qcow2

# This tasks is not be used in CI or on any public systems
# Only use this option when debugging locally on a secure system
- name: set root password for image
  command: >
    virt-customize --smp 2 -m {{ convert_image_host_memory }}
    -a {{ convert_image_working_dir }}/overcloud-full.qcow2
    --root-password password:{{ overcloud_full_root_pwd }}
  when:
    - overcloud_full_root_pwd is defined
    - overcloud_full_qcow2.stat.exists

- name: copy overcloud-full.qcow2 to undercloud.qcow2
  command: >
    cp {{ convert_image_working_dir }}/overcloud-full.qcow2
       {{ convert_image_working_dir }}/undercloud.qcow2
  changed_when: true
  when: overcloud_full_qcow2.stat.exists and overcloud_as_undercloud|bool

# Resize the undercloud image using qemu-img resize
- name: Resize the undercloud image using qemu-image resize
  command: >
    qemu-img resize {{ convert_image_working_dir }}/undercloud.qcow2
                    {{ flavors[undercloud_node.name].disk }}G
  changed_when: true

- name: convert image
  command: >
    virt-customize -v --smp 2 -m {{ convert_image_host_memory }}
    -a {{ convert_image_working_dir }}/undercloud.qcow2
    --run convert_image.sh
  changed_when: true
  args:
    chdir: "{{ convert_image_working_dir }}"
  environment:
    LIBGUESTFS_BACKEND: direct
    LIBVIRT_DEFAULT_URI: "{{ libvirt_uri }}"

- name: collect diagnostic log from undercloud image
  shell: >
    virt-cat -a undercloud.qcow2 /tmp/builder.log > builder-undercloud.log 2>&1;
  changed_when: true
  args:
    chdir: "{{ convert_image_working_dir }}"
  environment:
    LIBGUESTFS_BACKEND: direct
    LIBVIRT_DEFAULT_URI: "{{ libvirt_uri }}"
