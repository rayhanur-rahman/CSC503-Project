# Copyright (c) 2015 Hewlett-Packard Development Company, L.P.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# This is overly complex, however get_url will always re-retrieve the file
# if it already exists, and this is to prevent that behavior.
- import_role:
    name: venv_python_path

- name: "Test if IPA kernel is present"
  stat: path={{ ipa_kernel }}
  register: test_ipa_kernel_present

- block:
  - name: "Download IPA kernel checksum file"
    get_url: url="{{ ipa_kernel_upstream_checksum_url }}" dest="{{ ipa_kernel }}.{{ ipa_kernel_upstream_checksum_algo }}" timeout=300
    register: ipa_kernel_checksum_result
    ignore_errors: yes
    environment: "{{ venv }}"
  - debug: msg="WARNING!!! {{ ipa_kernel_upstream_checksum_algo }} file not found at {{ ipa_kernel_upstream_checksum_url }}"
    when: ipa_kernel_checksum_result is defined and ipa_kernel_checksum_result.status_code is defined and ipa_kernel_checksum_result.status_code == 404
  - fail: msg="FATAL {{ ipa_kernel_upstream_checksum_algo }} file not found at {{ ipa_kernel_upstream_checksum_url }} GOT {{ ipa_kernel_checksum_result }}"
    when: ipa_kernel_checksum_result is not defined or ipa_kernel_checksum_result.changed is not defined or
          (ipa_kernel_checksum_result.changed and ipa_kernel_checksum_result.status_code != 404 and ipa_kernel_checksum_result.status_code != 200)
  - name: "Extract IPA kernel checksum"
    shell: awk '/{{ ipa_kernel_upstream_url | basename }}/{print $1}' "{{ ipa_kernel }}.{{ ipa_kernel_upstream_checksum_algo }}"
    register: parsed_ipa_kernel_checksum
    when: not ipa_kernel_checksum_result|failed
  - fail:
      msg: "Failed to extract checksum for {{ ipa_kernel_upstream_url | basename }}"
    when: not ipa_kernel_checksum_result|failed and parsed_ipa_kernel_checksum.stdout == ""
  - set_fact:
      ipa_kernel_checksum: "{{ ipa_kernel_upstream_checksum_algo }}:{{ parsed_ipa_kernel_checksum.stdout }}"
    when: not ipa_kernel_checksum_result|failed
  when: ipa_kernel_upstream_checksum_url != ""

- name: "Download IPA kernel"
  get_url:
    url: "{{ ipa_kernel_upstream_url }}"
    dest: "{{ ipa_kernel }}"
    checksum: "{{ ipa_kernel_checksum | default(omit) }}"
    timeout: 300
    # Keep downloading it until we get a good copy
    force: yes
  register: ipa_kernel_download_done
  until: ipa_kernel_download_done|succeeded or
         (ipa_kernel_download_done|failed and ipa_kernel_download_done.status_code == 404)
  retries: 5
  delay: 10
  environment: "{{ venv }}"
  when: test_ipa_kernel_present.stat.exists == false

- name: "Test if IPA image is present"
  stat: path={{ ipa_ramdisk }}
  register: test_ipa_image_present

- block:
  - name: "Download IPA image checksum"
    get_url: url="{{ ipa_ramdisk_upstream_checksum_url }}" dest="{{ ipa_ramdisk }}.{{ ipa_ramdisk_upstream_checksum_algo }}" timeout=300
    register: ipa_ramdisk_checksum_result
    ignore_errors: yes
    environment: "{{ venv }}"
  - debug: msg="WARNING!!! {{ ipa_ramdisk_upstream_checksum_algo }} file not found at {{ ipa_ramdisk_upstream_checksum_url }}"
    when: ipa_ramdisk_checksum_result is defined and ipa_ramdisk_checksum_result.status_code is defined and ipa_ramdisk_checksum_result.status_code == 404
  - fail: msg="FATAL {{ ipa_ramdisk_upstream_checksum_algo }} file not found at {{ ipa_ramdisk_upstream_checksum_url }}"
    when: ipa_ramdisk_checksum_result is not defined or ipa_ramdisk_checksum_result.changed is not defined or
          (ipa_ramdisk_checksum_result.changed and ipa_ramdisk_checksum_result.status_code != 404 and ipa_ramdisk_checksum_result.status_code != 200)
  - name: "Extract IPA ramdisk checksum"
    shell: awk '/{{ ipa_ramdisk_upstream_url | basename }}/{print $1}' "{{ ipa_ramdisk }}.{{ ipa_ramdisk_upstream_checksum_algo }}"
    register: parsed_ipa_ramdisk_checksum
    when: not ipa_ramdisk_checksum_result|failed
  - fail:
      msg: "Failed to extract checksum for {{ ipa_ramdisk_upstream_url | basename }}"
    when: not ipa_ramdisk_checksum_result|failed and parsed_ipa_ramdisk_checksum.stdout == ""
  - set_fact:
      ipa_ramdisk_checksum: "{{ ipa_ramdisk_upstream_checksum_algo }}:{{ parsed_ipa_ramdisk_checksum.stdout }}"
    when: not ipa_ramdisk_checksum_result|failed
  when: ipa_ramdisk_upstream_checksum_url != ""

- name: "Download IPA image"
  get_url:
    url: "{{ ipa_ramdisk_upstream_url }}"
    dest: "{{ ipa_ramdisk }}"
    checksum: "{{ ipa_ramdisk_checksum | default(omit) }}"
    timeout: 300
    # Keep downloading it until we get a good copy
    force: yes
  register: ipa_ramdisk_download_done
  until: ipa_ramdisk_download_done|succeeded or
         (ipa_ramdisk_download_done|failed and ipa_ramdisk_download_done.status_code == 404)
  retries: 5
  delay: 10
  environment: "{{ venv }}"
  when: test_ipa_image_present.stat.exists == false
